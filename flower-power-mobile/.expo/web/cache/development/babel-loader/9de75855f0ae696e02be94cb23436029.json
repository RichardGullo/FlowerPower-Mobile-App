{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repositories\\\\FlowerPower-Mobile-App\\\\flower-power-mobile\\\\components\\\\PlantReminder.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ImagePropTypes } from \"react-native-web/dist/index\";\nimport Color from \"../constants/colors\";\nimport Dash from 'react-native-dash';\nimport { Icon } from 'react-native-elements';\nimport { CheckBox } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/native';\n\nfunction PlantReminder(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggleCheckBox = _useState2[0],\n      setToggleCheckBox = _useState2[1];\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(Dash, {\n    style: {\n      width: '100%',\n      height: 1\n    },\n    dashLength: 7,\n    dashThickness: 1,\n    dashColor: Color.HeaderText,\n    dashGap: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingVertical: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.plantImage\n    },\n    style: {\n      borderRadius: 5,\n      resizeMode: 'stretch',\n      width: 64,\n      height: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingLeft: 5,\n      paddingRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.plantLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 31\n    }\n  }, \"Nickname:\"), \" \", props.nickname), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.plantLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 31\n    }\n  }, \"Species:\"), \" \", props.species), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.plantLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 31\n    }\n  }, \"Reminder:\"), \" Water in \", props.numberOfDays, \" days\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, React.createElement(CheckBox, {\n    checked: toggleCheckBox,\n    onPress: function onPress() {\n      props.onToggleCompletedTask(props.id, !toggleCheckBox);\n      setToggleCheckBox(!toggleCheckBox);\n    },\n    containerStyle: {\n      color: 'green',\n      padding: 0,\n      margin: 0\n    },\n    checkedColor: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, \"I completed this task\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, \"View Entry Here\"), React.createElement(Icon, {\n    name: \"long-arrow-right\",\n    type: \"font-awesome\",\n    color: Color.header,\n    onPress: function onPress() {\n      navigation.navigate('ViewEntry', {\n        itemId: props.id\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  })))))), React.createElement(Dash, {\n    style: {\n      width: '100%',\n      height: 1\n    },\n    dashLength: 7,\n    dashThickness: 1,\n    dashColor: Color.HeaderText,\n    dashGap: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  plantLabel: {\n    color: Color.darkGreen,\n    textDecorationLine: 'underline'\n  }\n});\nexport { PlantReminder };","map":{"version":3,"sources":["D:/Repositories/FlowerPower-Mobile-App/flower-power-mobile/components/PlantReminder.js"],"names":["React","useState","ImagePropTypes","Color","Dash","Icon","CheckBox","useNavigation","PlantReminder","props","toggleCheckBox","setToggleCheckBox","navigation","width","height","HeaderText","paddingVertical","flexDirection","uri","plantImage","borderRadius","resizeMode","flex","paddingLeft","paddingRight","styles","plantLabel","nickname","species","numberOfDays","justifyContent","alignItems","paddingTop","onToggleCompletedTask","id","color","padding","margin","header","navigate","itemId","StyleSheet","create","darkGreen","textDecorationLine"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;SACyDC,c;AACzD,OAAOC,KAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EACA;AAAA,kBACgDR,QAAQ,CAAC,KAAD,CADxD;AAAA;AAAA,MACWS,cADX;AAAA,MAC2BC,iBAD3B;;AAEI,MAAMC,UAAU,GAAGL,aAAa,EAAhC;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACM,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC;AAArB,KAAf;AAAwC,IAAA,UAAU,EAAI,CAAtD;AAA0D,IAAA,aAAa,EAAI,CAA3E;AAA8E,IAAA,SAAS,EAAIX,KAAK,CAACY,UAAjG;AAA6G,IAAA,OAAO,EAAI,CAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,eAAe,EAAC;AAAjB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,aAAa,EAAC;AAAf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI;AAACC,MAAAA,GAAG,EAACT,KAAK,CAACU;AAAX,KAAjB;AAAyC,IAAA,KAAK,EAAI;AAACC,MAAAA,YAAY,EAAC,CAAd;AAAiBC,MAAAA,UAAU,EAAC,SAA5B;AAAuCR,MAAAA,KAAK,EAAC,EAA7C;AAAiDC,MAAAA,MAAM,EAAC;AAAxD,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACQ,MAAAA,IAAI,EAAC,CAAN;AAASC,MAAAA,WAAW,EAAC,CAArB;AAAwBC,MAAAA,YAAY,EAAC;AAArC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAN,OAA0DjB,KAAK,CAACkB,QAAhE,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIF,MAAM,CAACC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAN,OAAyDjB,KAAK,CAACmB,OAA/D,CAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIH,MAAM,CAACC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAN,gBAAoEjB,KAAK,CAACoB,YAA1E,UAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACZ,MAAAA,aAAa,EAAC,KAAf;AAAsBa,MAAAA,cAAc,EAAC;AAArC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACb,MAAAA,aAAa,EAAC,KAAf;AAAsBc,MAAAA,UAAU,EAAC,QAAjC;AAA2CC,MAAAA,UAAU,EAAC;AAAtD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AACI,IAAA,OAAO,EAAItB,cADf;AAEI,IAAA,OAAO,EAAI,mBAAM;AAACD,MAAAA,KAAK,CAACwB,qBAAN,CAA4BxB,KAAK,CAACyB,EAAlC,EAAqC,CAACxB,cAAtC;AAAuDC,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AAAmC,KAFhH;AAGI,IAAA,cAAc,EAAI;AAACyB,MAAAA,KAAK,EAAC,OAAP;AAAgBC,MAAAA,OAAO,EAAC,CAAxB;AAA2BC,MAAAA,MAAM,EAAC;AAAlC,KAHtB;AAII,IAAA,YAAY,EAAG,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPJ,CADJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACpB,MAAAA,aAAa,EAAC,KAAf;AAAsBc,MAAAA,UAAU,EAAC;AAAjC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACP,MAAAA,YAAY,EAAC;AAAd,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAG,kBADX;AAEI,IAAA,IAAI,EAAG,cAFX;AAGI,IAAA,KAAK,EAAIrB,KAAK,CAACmC,MAHnB;AAII,IAAA,OAAO,EAAE,mBAAM;AAEX1B,MAAAA,UAAU,CAAC2B,QAAX,CAAoB,WAApB,EAAiC;AAC/BC,QAAAA,MAAM,EAAE/B,KAAK,CAACyB;AADiB,OAAjC;AAGD,KATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,CAJJ,CAFJ,CADJ,CAHJ,EAuCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACrB,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC;AAArB,KAAf;AAAwC,IAAA,UAAU,EAAI,CAAtD;AAA0D,IAAA,aAAa,EAAI,CAA3E;AAA8E,IAAA,SAAS,EAAIX,KAAK,CAACY,UAAjG;AAA6G,IAAA,OAAO,EAAI,CAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,CADJ;AA2CH;;AAED,IAAMU,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC7BhB,EAAAA,UAAU,EAAC;AACPS,IAAAA,KAAK,EAAChC,KAAK,CAACwC,SADL;AAEPC,IAAAA,kBAAkB,EAAC;AAFZ;AADkB,CAAlB,CAAf;AAOA,SAAQpC,aAAR","sourcesContent":["import React, {useState} from 'react'\r\nimport {Text, View, Button, StyleSheet,StatusBar, Image, ImagePropTypes} from 'react-native'\r\nimport Color from '../constants/colors';\r\nimport Dash from 'react-native-dash';\r\nimport { Icon } from 'react-native-elements'\r\nimport { CheckBox } from 'react-native-elements'\r\nimport {useNavigation} from '@react-navigation/native';\r\n\r\n\r\nfunction PlantReminder(props)\r\n{\r\n    const [toggleCheckBox, setToggleCheckBox] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    return(\r\n        <View>\r\n            <Dash style = {{width:'100%',height:1}} dashLength = {7}  dashThickness = {1} dashColor = {Color.HeaderText} dashGap = {5}/>\r\n\r\n            <View style = {{paddingVertical:15}}>\r\n                <View style = {{flexDirection:'row'}}>\r\n                    <Image source = {{uri:props.plantImage}} style = {{borderRadius:5, resizeMode:'stretch', width:64, height:64}} />\r\n                    <View style = {{flex:1, paddingLeft:5, paddingRight:5}}>\r\n                        <Text><Text style = {styles.plantLabel}>Nickname:</Text> {props.nickname}</Text>\r\n                        <Text><Text style = {styles.plantLabel}>Species:</Text> {props.species}</Text>\r\n                        <Text><Text style = {styles.plantLabel} >Reminder:</Text> Water in {props.numberOfDays} days</Text>\r\n                        <View style = {{flexDirection:'row', justifyContent:'space-between'}}>\r\n                            <View style = {{flexDirection:'row', alignItems:'center', paddingTop:5}}>\r\n                            <CheckBox\r\n                                checked = {toggleCheckBox}\r\n                                onPress = {() => {props.onToggleCompletedTask(props.id,!toggleCheckBox); setToggleCheckBox(!toggleCheckBox)}}\r\n                                containerStyle = {{color:'green', padding:0, margin:0}}\r\n                                checkedColor = \"green\"\r\n                            />\r\n                                <Text>I completed this task</Text>\r\n                            </View>\r\n                            <View style = {{flexDirection:'row', alignItems:'center'}}>\r\n                                <Text style = {{paddingRight:5}}>View Entry Here</Text>\r\n                                <Icon \r\n                                    name = 'long-arrow-right' \r\n                                    type = 'font-awesome' \r\n                                    color = {Color.header} \r\n                                    onPress={() => {\r\n                                        /* 1. Navigate to the Details route with params */\r\n                                        navigation.navigate('ViewEntry', {\r\n                                          itemId: props.id,\r\n                                        });\r\n                                      }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            \r\n            <Dash style = {{width:'100%',height:1}} dashLength = {7}  dashThickness = {1} dashColor = {Color.HeaderText} dashGap = {5}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    plantLabel:{\r\n        color:Color.darkGreen, \r\n        textDecorationLine:'underline'\r\n    }\r\n})\r\n\r\nexport {PlantReminder}"]},"metadata":{},"sourceType":"module"}