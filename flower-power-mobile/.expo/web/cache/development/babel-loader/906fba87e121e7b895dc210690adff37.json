{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repositories\\\\FlowerPower-Mobile-App\\\\flower-power-mobile\\\\Screens\\\\NewEntry.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Color from \"../constants/colors\";\nimport { Header } from \"../components/Header\";\nimport { Input } from 'react-native-elements';\nimport { RoundButton } from \"../components/RoundButton\";\nimport { RoundButtonLarge } from \"../components/RoundButtonLarge\";\nimport { Icon } from 'react-native-elements';\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nfunction NewEntry(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedDate = _useState4[0],\n      setSelectedDate = _useState4[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    hideDatePicker();\n    setSelectedDate(date);\n  };\n\n  React.useEffect(function () {}, [selectedDate]);\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useContext = useContext(GlobalContext),\n      plantEntriesContext = _useContext.plantEntriesContext,\n      keyContext = _useContext.keyContext;\n\n  var _plantEntriesContext = _slicedToArray(plantEntriesContext, 2),\n      plantEntries = _plantEntriesContext[0],\n      setPlantEntries = _plantEntriesContext[1];\n\n  var _keyContext = _slicedToArray(keyContext, 2),\n      myKey = _keyContext[0],\n      setMyKey = _keyContext[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toggleSubmit = _useState8[0],\n      setToggleSubmit = _useState8[1];\n\n  function submitEntry() {\n    var tempArray = [];\n    var sunlight = 0;\n    var water = 0;\n    var key = myKey;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(buttonSet), _step; !(_step = _iterator()).done;) {\n      var button = _step.value;\n      tempArray.push(button.name);\n    }\n\n    for (var i = 0; i < 3; i++) {\n      if (sunInput[i] == true) sunlight++;\n    }\n\n    for (var _i = 0; _i < 3; _i++) {\n      if (waterInput[_i] == true) water++;\n    }\n\n    var myImage;\n\n    switch (nicknameInput.toLowerCase()) {\n      case 'pear':\n        myImage = require(\"../assets/pear.jpg\");\n        break;\n\n      case 'apple':\n        myImage = require(\"../assets/apple.png\");\n        break;\n\n      case 'rose':\n        myImage = require(\"../assets/rose.jpg\");\n        break;\n\n      case 'banana':\n        myImage = require(\"../assets/banana.png\");\n        break;\n\n      case 'grape fruit':\n        myImage = require(\"../assets/grapefruit.jpg\");\n        break;\n\n      default:\n        myImage = require(\"../assets/tempFlower.png\");\n    }\n\n    setPlantEntries(function (currentPlants) {\n      return [].concat(_toConsumableArray(currentPlants), [{\n        key: key.toString(),\n        nickname: nicknameInput,\n        species: speciesInput,\n        date: convertedDate(selectedDate),\n        classification: [].concat(tempArray),\n        image: image,\n        water: water,\n        sunlight: sunlight,\n        reminders: {\n          watered: wateredInput,\n          fertilized: fertilizedInput,\n          rotated: rotatedInput,\n          prunned: prunnedInput,\n          trimmed: trimmedInput,\n          replanted: replantedInput\n        },\n        notes: additionalNotesInput,\n        completedTask: [false, false],\n        deleteEntry: false,\n        imageUrl: image\n      }]);\n    });\n    setToggleSubmit(true);\n    setMyKey(myKey + 1);\n  }\n\n  React.useEffect(function () {\n    if (toggleSubmit) {\n      setNicknameInput(\"\");\n      setSpeciesInput(\"\");\n      setWateredInput(\"1\");\n      setFertilizedInput(\"1\");\n      setRotatedInput(\"1\");\n      setPrunnedInput(\"1\");\n      setTrimmedInput(\"1\");\n      setReplantedInput(\"1\");\n      setAdditionalNotesInput(\"\");\n      setToggleSubmit(false);\n      setRoundButtons([{\n        id: 0,\n        name: \"Algae\",\n        backgroundColor: Color.theme\n      }, {\n        id: 1,\n        name: \"Flower\",\n        backgroundColor: Color.theme\n      }, {\n        id: 2,\n        name: \"Fruit\",\n        backgroundColor: Color.theme\n      }, {\n        id: 3,\n        name: \"Grass\",\n        backgroundColor: Color.theme\n      }, {\n        id: 4,\n        name: \"Herb\",\n        backgroundColor: Color.theme\n      }, {\n        id: 5,\n        name: \"Moss\",\n        backgroundColor: Color.theme\n      }, {\n        id: 6,\n        name: \"Orchid\",\n        backgroundColor: Color.theme\n      }, {\n        id: 7,\n        name: \"Root\",\n        backgroundColor: Color.theme\n      }, {\n        id: 8,\n        name: \"Shrub\",\n        backgroundColor: Color.theme\n      }, {\n        id: 9,\n        name: \"Succulent\",\n        backgroundColor: Color.theme\n      }, {\n        id: 10,\n        name: \"Tree\",\n        backgroundColor: Color.theme\n      }, {\n        id: 11,\n        name: \"Veggie\",\n        backgroundColor: Color.theme\n      }, {\n        id: 12,\n        name: \"Vine\",\n        backgroundColor: Color.theme\n      }, {\n        id: 13,\n        name: \"Other\",\n        backgroundColor: Color.theme\n      }]);\n      setButtonSet([]);\n      setSunInput([false, false, false]);\n      setWaterInput([false, false, false]);\n      setImage(\"\");\n    }\n  }, [toggleSubmit]);\n\n  var _useState9 = useState([{\n    id: 0,\n    name: \"Algae\",\n    backgroundColor: Color.theme\n  }, {\n    id: 1,\n    name: \"Flower\",\n    backgroundColor: Color.theme\n  }, {\n    id: 2,\n    name: \"Fruit\",\n    backgroundColor: Color.theme\n  }, {\n    id: 3,\n    name: \"Grass\",\n    backgroundColor: Color.theme\n  }, {\n    id: 4,\n    name: \"Herb\",\n    backgroundColor: Color.theme\n  }, {\n    id: 5,\n    name: \"Moss\",\n    backgroundColor: Color.theme\n  }, {\n    id: 6,\n    name: \"Orchid\",\n    backgroundColor: Color.theme\n  }, {\n    id: 7,\n    name: \"Root\",\n    backgroundColor: Color.theme\n  }, {\n    id: 8,\n    name: \"Shrub\",\n    backgroundColor: Color.theme\n  }, {\n    id: 9,\n    name: \"Succulent\",\n    backgroundColor: Color.theme\n  }, {\n    id: 10,\n    name: \"Tree\",\n    backgroundColor: Color.theme\n  }, {\n    id: 11,\n    name: \"Veggie\",\n    backgroundColor: Color.theme\n  }, {\n    id: 12,\n    name: \"Vine\",\n    backgroundColor: Color.theme\n  }, {\n    id: 13,\n    name: \"Other\",\n    backgroundColor: Color.theme\n  }]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      roundButtons = _useState10[0],\n      setRoundButtons = _useState10[1];\n\n  React.useEffect(function () {}, [plantEntries]);\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nicknameInput = _useState12[0],\n      setNicknameInput = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      speciesInput = _useState14[0],\n      setSpeciesInput = _useState14[1];\n\n  var _useState15 = useState(\"1\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      wateredInput = _useState16[0],\n      setWateredInput = _useState16[1];\n\n  var _useState17 = useState(\"1\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      fertilizedInput = _useState18[0],\n      setFertilizedInput = _useState18[1];\n\n  var _useState19 = useState(\"1\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      rotatedInput = _useState20[0],\n      setRotatedInput = _useState20[1];\n\n  var _useState21 = useState(\"1\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      prunnedInput = _useState22[0],\n      setPrunnedInput = _useState22[1];\n\n  var _useState23 = useState(\"1\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      trimmedInput = _useState24[0],\n      setTrimmedInput = _useState24[1];\n\n  var _useState25 = useState(\"1\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      replantedInput = _useState26[0],\n      setReplantedInput = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      additionalNotesInput = _useState28[0],\n      setAdditionalNotesInput = _useState28[1];\n\n  var _useState29 = useState([false, false, false]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      sunInput = _useState30[0],\n      setSunInput = _useState30[1];\n\n  var _useState31 = useState([false, false, false]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      waterInput = _useState32[0],\n      setWaterInput = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      buttonSet = _useState34[0],\n      setButtonSet = _useState34[1];\n\n  console.log(buttonSet.length);\n\n  function toggleSun(index) {\n    var tempObject = _toConsumableArray(sunInput);\n\n    if (tempObject[index]) tempObject[index] = false;else tempObject[index] = true;\n    setSunInput(_toConsumableArray(tempObject));\n  }\n\n  function toggleWater(index) {\n    var tempObject = _toConsumableArray(waterInput);\n\n    if (tempObject[index]) tempObject[index] = false;else tempObject[index] = true;\n    setWaterInput(_toConsumableArray(tempObject));\n  }\n\n  function toggleButton(id) {\n    var tempArray = _toConsumableArray(roundButtons);\n\n    var tempButtonSet = _toConsumableArray(buttonSet);\n\n    var tempButton = _objectSpread({}, roundButtons[id]);\n\n    if (tempArray[id].backgroundColor == Color.theme) {\n      if (tempButtonSet.length == 3) {\n        var poppedId = tempButtonSet[2].id;\n        tempButtonSet.pop();\n        tempArray[poppedId].backgroundColor = Color.theme;\n        tempArray[id].backgroundColor = Color.darkGreen;\n        tempButtonSet.push(tempArray[id]);\n        setButtonSet(_toConsumableArray(tempButtonSet));\n        setRoundButtons(_toConsumableArray(tempArray));\n      } else {\n        tempArray[id].backgroundColor = Color.darkGreen;\n        tempButtonSet.push(tempArray[id]);\n        setButtonSet(function (currentButtons) {\n          return [].concat(_toConsumableArray(currentButtons), [tempButton]);\n        });\n        setRoundButtons(_toConsumableArray(tempArray));\n      }\n    } else {\n      tempArray[id].backgroundColor = Color.theme;\n      tempButtonSet = tempButtonSet.filter(function (name) {\n        return name.id != id;\n      });\n      setButtonSet(_toConsumableArray(tempButtonSet));\n      setRoundButtons(_toConsumableArray(tempArray));\n    }\n  }\n\n  return React.createElement(KeyboardAwareScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, React.createElement(StatusBar, {\n    barstyle: \"dark-content\",\n    hidden: false,\n    backgroundColor: Color.theme,\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.secondaryContainerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/header.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 260,\n      width: 260,\n      borderWidth: 2,\n      borderColor: '#816868',\n      borderRadius: 10,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }, image ? React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 150,\n      height: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 38\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/path1.png\"),\n    style: {\n      resizeMode: 'contain',\n      height: 50,\n      width: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, \"Click this Panel to upload an image of your plant\")))), React.createElement(View, {\n    style: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: '#816868'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 29\n    }\n  }, \"Plant Nickname\"), React.createElement(TextInput, {\n    placeholder: \"Plant nickname\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      width: '100%',\n      paddingLeft: 10,\n      paddingVertical: Platform.OS === 'ios' ? 5 : 0\n    },\n    placeholderTextColor: \"black\",\n    onChangeText: function onChangeText(text) {\n      setNicknameInput(text);\n      console.log(text);\n    },\n    value: nicknameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: '#816868'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 29\n    }\n  }, \"Plant Species\"), React.createElement(TextInput, {\n    placeholder: \"Plant Species\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      width: '100%',\n      paddingLeft: 10,\n      paddingVertical: Platform.OS === 'ios' ? 5 : 0\n    },\n    placeholderTextColor: \"black\",\n    onChangeText: function onChangeText(text) {\n      return setSpeciesInput(text);\n    },\n    value: speciesInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 29\n    }\n  })))), React.createElement(View, {\n    style: styles.plantClassificationContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: '#816868'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 21\n    }\n  }, \"Plant Classification (Select up to 3)\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 21\n    }\n  }, React.createElement(RoundButtonLarge, {\n    name: roundButtons[0].name,\n    highlightColor: roundButtons[0].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[0].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[1].name,\n    highlightColor: roundButtons[1].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[1].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[2].name,\n    highlightColor: roundButtons[2].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[2].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[3].name,\n    highlightColor: roundButtons[3].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[3].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[4].name,\n    highlightColor: roundButtons[4].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[4].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[5].name,\n    highlightColor: roundButtons[5].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[5].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[6].name,\n    highlightColor: roundButtons[6].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[6].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[7].name,\n    highlightColor: roundButtons[7].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[7].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[8].name,\n    highlightColor: roundButtons[8].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[8].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[9].name,\n    highlightColor: roundButtons[9].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[9].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[10].name,\n    highlightColor: roundButtons[10].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[10].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[11].name,\n    highlightColor: roundButtons[11].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[11].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '66%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }, React.createElement(RoundButtonLarge, {\n    name: roundButtons[12].name,\n    highlightColor: roundButtons[12].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[12].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[13].name,\n    highlightColor: roundButtons[13].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[13].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  })))), React.createElement(View, {\n    style: styles.weatherContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 29\n    }\n  }, \"Sunlight Needed: \"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleSun(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 33\n    }\n  }, sunInput[0] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedSun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 37\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 37\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleSun(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 33\n    }\n  }, sunInput[1] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedSun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 37\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 37\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleSun(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 33\n    }\n  }, sunInput[2] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedSun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 37\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 37\n    }\n  })))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 29\n    }\n  }, \"Water Needed:\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleWater(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 29\n    }\n  }, waterInput[0] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedCloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 34\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/cloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 33\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleWater(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 29\n    }\n  }, waterInput[1] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedCloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 34\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/cloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 33\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleWater(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, waterInput[2] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedCloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 34\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/cloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 33\n    }\n  })))))), React.createElement(View, {\n    style: {\n      width: '85%',\n      paddingTop: 20,\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 21\n    }\n  }, \"Date Acquired\"), React.createElement(Text, {\n    style: {\n      color: Color.darkGreen,\n      zIndex: 1\n    },\n    onPress: showDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 21\n    }\n  }, \"Click here to select date\"), React.createElement(DateTimePickerModal, {\n    isVisible: isDatePickerVisible,\n    mode: \"date\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 21\n    }\n  }, formatDateEntry(selectedDate))), React.createElement(View, {\n    style: styles.remindersContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: Color.header,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 58\n    }\n  }, \"Reminders\"), \" (Leave the number blank if not applicable. )\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 85\n    }\n  }, \"watered\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      paddingLeft: 10,\n      marginHorizontal: 5\n    },\n    onChangeText: function onChangeText(text) {\n      return setWateredInput(text);\n    },\n    value: wateredInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 85\n    }\n  }, \"fertilized\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      paddingLeft: 10,\n      marginHorizontal: 5\n    },\n    onChangeText: function onChangeText(text) {\n      return setFertilizedInput(text);\n    },\n    value: fertilizedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 85\n    }\n  }, \"rotated\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      paddingLeft: 10,\n      marginHorizontal: 5\n    },\n    onChangeText: function onChangeText(text) {\n      return setRotatedInput(text);\n    },\n    value: rotatedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 85\n    }\n  }, \"pruned\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      paddingLeft: 10,\n      marginHorizontal: 5\n    },\n    onChangeText: function onChangeText(text) {\n      return setPrunnedInput(text);\n    },\n    value: prunnedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 85\n    }\n  }, \"trimmed\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      paddingLeft: 10,\n      marginHorizontal: 5\n    },\n    onChangeText: function onChangeText(text) {\n      return setTrimmedInput(text);\n    },\n    value: trimmedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 85\n    }\n  }, \"replanted\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      paddingLeft: 10,\n      marginHorizontal: 5\n    },\n    onChangeText: function onChangeText(text) {\n      return setReplantedInput(text);\n    },\n    value: replantedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 25\n    }\n  }, \"days\"))), React.createElement(View, {\n    style: styles.additionalNotesContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 21\n    }\n  }, \"Additional Notes\"), React.createElement(TextInput, {\n    placeholder: \"Write any additional notes you'd like to keep about your plant here.\",\n    style: {\n      borderColor: Color.theme,\n      borderWidth: 1,\n      backgroundColor: \"white\",\n      borderRadius: 5,\n      paddingLeft: 10,\n      paddingTop: 5,\n      marginTop: 5,\n      textAlignVertical: 'top',\n      paddingVertical: Platform.OS === 'ios' ? 5 : 0\n    },\n    placeholderTextColor: \"black\",\n    numberOfLines: 10,\n    multiline: true,\n    onChangeText: function onChangeText(text) {\n      return setAdditionalNotesInput(text);\n    },\n    value: additionalNotesInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: Color.theme,\n      flexDirection: 'row',\n      borderRadius: 5,\n      alignItems: 'center',\n      width: 150,\n      paddingVertical: 5,\n      zIndex: 5\n    },\n    onPress: function onPress() {\n      submitEntry();\n      navigation.navigate(\"Home\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 29\n    }\n  }, React.createElement(Icon, {\n    name: \"pencil\",\n    type: \"simple-line-icon\",\n    color: \"white\",\n    style: {\n      paddingLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      paddingLeft: 10,\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 33\n    }\n  }, \"Create Entry\")), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: Color.theme,\n      flexDirection: 'row',\n      borderRadius: 5,\n      alignItems: 'center',\n      width: 150,\n      zIndex: 5\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"Home\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 29\n    }\n  }, React.createElement(Icon, {\n    name: \"md-close\",\n    type: \"ionicon\",\n    color: \"white\",\n    style: {\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: {\n      paddingLeft: 10,\n      color: 'white',\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 33\n    }\n  }, \"Cancel\"))))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Output\",\n    onPress: function onPress() {\n      return console.log(\"selected date is: \", image);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 21\n    }\n  }))));\n\n  function formatDateEntry(date) {\n    var tempDate = date.toString().split(\" \");\n    var month = tempDate[1];\n    var day = tempDate[2];\n    var year = tempDate[3];\n    return month + \" \" + day + \", \" + year;\n  }\n\n  function convertedDate(date) {\n    var originalDate = date.toString();\n    var day;\n    var month = -1;\n    var year;\n    var dateArray = originalDate.split(\" \");\n\n    switch (dateArray[1].toLowerCase()) {\n      case 'jan':\n        month = 1;\n        break;\n\n      case 'feb':\n        month = 2;\n        break;\n\n      case 'mar':\n        month = 3;\n        break;\n\n      case 'apr':\n        month = 4;\n        break;\n\n      case 'may':\n        month = 5;\n        break;\n\n      case 'jun':\n        month = 6;\n        break;\n\n      case 'jul':\n        month = 7;\n        break;\n\n      case 'aug':\n        month = 8;\n        break;\n\n      case 'sep':\n        month = 9;\n        break;\n\n      case 'oct':\n        month = 10;\n        break;\n\n      case 'nov':\n        month = 11;\n        break;\n\n      case 'dec':\n        month = 12;\n        break;\n    }\n\n    day = dateArray[2];\n    year = dateArray[3];\n    console.log(dateArray[1]);\n    console.log(month);\n    var completeDate = year + \"-\" + month + \"-\" + day;\n    return completeDate;\n  }\n}\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: Color.background,\n    alignItems: 'center',\n    paddingBottom: 50\n  },\n  secondaryContainerHeader: {\n    marginTop: Platform.OS === 'ios' ? 0 : 11,\n    alignItems: 'center',\n    height: 290,\n    width: '100%'\n  },\n  headerContainer: {\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%'\n  },\n  formContainer: {\n    width: '80%'\n  },\n  plantClassificationContainer: {\n    marginTop: 10,\n    width: '80%'\n  },\n  weatherContainer: {\n    paddingTop: 20,\n    width: '80%'\n  },\n  remindersContainer: {\n    marginTop: 20\n  },\n  additionalNotesContainer: {\n    marginTop: 20,\n    width: '85%'\n  },\n  HeaderText: {\n    fontSize: 25,\n    color: Color.header,\n    fontWeight: 'bold'\n  },\n  contentText: {\n    fontSize: 16\n  },\n  ContentTextHeader: {\n    color: Color.header\n  }\n});\nexport { NewEntry };","map":{"version":3,"sources":["D:/Repositories/FlowerPower-Mobile-App/flower-power-mobile/Screens/NewEntry.js"],"names":["React","useContext","useEffect","useState","Color","Header","Input","RoundButton","RoundButtonLarge","Icon","GlobalContext","DateTimePickerModal","ImagePicker","Constants","KeyboardAwareScrollView","NewEntry","navigation","route","isDatePickerVisible","setDatePickerVisibility","Date","selectedDate","setSelectedDate","showDatePicker","hideDatePicker","handleConfirm","date","image","setImage","Platform","OS","requestCameraRollPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","plantEntriesContext","keyContext","plantEntries","setPlantEntries","myKey","setMyKey","toggleSubmit","setToggleSubmit","submitEntry","tempArray","sunlight","water","key","buttonSet","button","push","name","i","sunInput","waterInput","myImage","nicknameInput","toLowerCase","require","currentPlants","toString","nickname","species","speciesInput","convertedDate","classification","reminders","watered","wateredInput","fertilized","fertilizedInput","rotated","rotatedInput","prunned","prunnedInput","trimmed","trimmedInput","replanted","replantedInput","notes","additionalNotesInput","completedTask","deleteEntry","imageUrl","setNicknameInput","setSpeciesInput","setWateredInput","setFertilizedInput","setRotatedInput","setPrunnedInput","setTrimmedInput","setReplantedInput","setAdditionalNotesInput","setRoundButtons","id","backgroundColor","theme","setButtonSet","setSunInput","setWaterInput","roundButtons","length","toggleSun","index","tempObject","toggleWater","toggleButton","tempButtonSet","tempButton","poppedId","pop","darkGreen","currentButtons","filter","flexGrow","styles","mainContainer","secondaryContainerHeader","headerContainer","height","width","borderWidth","borderColor","borderRadius","justifyContent","alignItems","resizeMode","textAlign","formContainer","marginBottom","fontSize","color","paddingLeft","paddingVertical","text","plantClassificationContainer","flexDirection","flexWrap","bind","weatherContainer","contentText","ContentTextHeader","paddingTop","header","zIndex","formatDateEntry","remindersContainer","fontWeight","marginHorizontal","additionalNotesContainer","marginTop","textAlignVertical","navigate","tempDate","split","month","day","year","originalDate","dateArray","completeDate","StyleSheet","create","flex","background","paddingBottom","position","HeaderText"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;;;;;;;;;;;;AAEA,OAAOC,KAAP;AACA,SAAQC,MAAR;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAAQC,WAAR;AACA,SAASC,gBAAT;AACA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,SAASC,aAAT;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,uBAAT,QAAwC,yCAAxC;;AAEA,SAASC,QAAT,OACA;AAAA,MADmBC,UACnB,QADmBA,UACnB;AAAA,MAD+BC,KAC/B,QAD+BA,KAC/B;;AAAA,kBAE2Dd,QAAQ,CAAC,KAAD,CAFnE;AAAA;AAAA,MAEWe,mBAFX;AAAA,MAEgCC,uBAFhC;;AAAA,mBAG4ChB,QAAQ,CAAC,IAAIiB,IAAJ,EAAD,CAHpD;AAAA;AAAA,MAGWC,YAHX;AAAA,MAGyBC,eAHzB;;AAKI,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BJ,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,GAFD;;AAIA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BL,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD,GAFD;;AAIA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAE9BF,IAAAA,cAAc;AACdF,IAAAA,eAAe,CAACI,IAAD,CAAf;AACD,GAJD;;AAOA1B,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAK,CAIpB,CAJD,EAIE,CAACmB,YAAD,CAJF;;AApBJ,mBA4B8BlB,QAAQ,CAAC,IAAD,CA5BtC;AAAA;AAAA,MA4BWwB,KA5BX;AAAA,MA4BkBC,QA5BlB;;AA8BI1B,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG2B,QAAQ,CAACC,EAAT,KAAgB,KADnB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAE4BlB,WAAW,CAACmB,iCAAZ,EAF5B;;AAAA;AAAA;AAEWC,cAAAA,MAFX,yBAEWA,MAFX;;AAGG,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AAC1BC,gBAAAA,KAAK,CAAC,2DAAD,CAAL;AACC;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKtB,WAAW,CAACuB,uBAAZ,CAAoC;AACvDC,cAAAA,UAAU,EAAExB,WAAW,CAACyB,gBAAZ,CAA6BC,GADc;AAEvDC,cAAAA,aAAa,EAAE,IAFwC;AAGvDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH+C;AAIvDC,cAAAA,OAAO,EAAE;AAJ8C,aAApC,CADL;;AAAA;AACVC,YAAAA,MADU;AAQdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,gBAAI,CAACA,MAAM,CAACG,SAAZ,EAAuB;AACvBjB,cAAAA,QAAQ,CAACc,MAAM,CAACI,GAAR,CAAR;AACC;;AAZa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAzCJ,oBA6D8C7C,UAAU,CAACS,aAAD,CA7DxD;AAAA,MA6DWqC,mBA7DX,eA6DWA,mBA7DX;AAAA,MA6DgCC,UA7DhC,eA6DgCA,UA7DhC;;AAAA,4CA+D2CD,mBA/D3C;AAAA,MA+DUE,YA/DV;AAAA,MA+DwBC,eA/DxB;;AAAA,mCAgE6BF,UAhE7B;AAAA,MAgEUG,KAhEV;AAAA,MAgEiBC,QAhEjB;;AAAA,mBAkE2CjD,QAAQ,CAAC,KAAD,CAlEnD;AAAA;AAAA,MAkEUkD,YAlEV;AAAA,MAkEwBC,eAlExB;;AAsEI,WAASC,WAAT,GACA;AACI,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,GAAG,GAAGR,KAAV;;AAEA,yDAAkBS,SAAlB,wCACA;AAAA,UADQC,MACR;AACIL,MAAAA,SAAS,CAACM,IAAV,CAAeD,MAAM,CAACE,IAAtB;AACH;;AAED,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EACA;AACI,UAAGC,QAAQ,CAACD,CAAD,CAAR,IAAe,IAAlB,EACIP,QAAQ;AACf;;AAED,SAAI,IAAIO,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAG,CAAnB,EAAsBA,EAAC,EAAvB,EACA;AACI,UAAGE,UAAU,CAACF,EAAD,CAAV,IAAiB,IAApB,EACIN,KAAK;AACZ;;AAID,QAAIS,OAAJ;;AAEA,YAAOC,aAAa,CAACC,WAAd,EAAP;AAEI,WAAK,MAAL;AACIF,QAAAA,OAAO,GAAGG,OAAO,sBAAjB;AACA;;AACJ,WAAK,OAAL;AACIH,QAAAA,OAAO,GAAGG,OAAO,uBAAjB;AACA;;AACJ,WAAK,MAAL;AACIH,QAAAA,OAAO,GAAGG,OAAO,sBAAjB;AACA;;AACJ,WAAK,QAAL;AACIH,QAAAA,OAAO,GAAGG,OAAO,wBAAjB;AACA;;AACJ,WAAK,aAAL;AACIH,QAAAA,OAAO,GAAGG,OAAO,4BAAjB;AACA;;AACJ;AACIH,QAAAA,OAAO,GAAGG,OAAO,4BAAjB;AAlBR;;AAqBApB,IAAAA,eAAe,CAAC,UAAAqB,aAAa;AAAA,0CAAQA,aAAR,IAC7B;AACIZ,QAAAA,GAAG,EAACA,GAAG,CAACa,QAAJ,EADR;AAEIC,QAAAA,QAAQ,EAACL,aAFb;AAGIM,QAAAA,OAAO,EAACC,YAHZ;AAIIjD,QAAAA,IAAI,EAACkD,aAAa,CAACvD,YAAD,CAJtB;AAKIwD,QAAAA,cAAc,YAAKrB,SAAL,CALlB;AAMI7B,QAAAA,KAAK,EAACA,KANV;AAOI+B,QAAAA,KAAK,EAACA,KAPV;AAQID,QAAAA,QAAQ,EAACA,QARb;AASIqB,QAAAA,SAAS,EAAC;AACNC,UAAAA,OAAO,EAACC,YADF;AAENC,UAAAA,UAAU,EAACC,eAFL;AAGNC,UAAAA,OAAO,EAACC,YAHF;AAINC,UAAAA,OAAO,EAACC,YAJF;AAKNC,UAAAA,OAAO,EAACC,YALF;AAMNC,UAAAA,SAAS,EAACC;AANJ,SATd;AAiBIC,QAAAA,KAAK,EAACC,oBAjBV;AAkBIC,QAAAA,aAAa,EAAC,CAAC,KAAD,EAAO,KAAP,CAlBlB;AAmBIC,QAAAA,WAAW,EAAC,KAnBhB;AAoBIC,QAAAA,QAAQ,EAACpE;AApBb,OAD6B;AAAA,KAAd,CAAf;AAwBA2B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH;;AAGDnD,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAK;AACjB,QAAGmD,YAAH,EACA;AACI2C,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAC,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAC,MAAAA,eAAe,CAAC,GAAD,CAAf;AACAC,MAAAA,kBAAkB,CAAC,GAAD,CAAlB;AACAC,MAAAA,eAAe,CAAC,GAAD,CAAf;AACAC,MAAAA,eAAe,CAAC,GAAD,CAAf;AACAC,MAAAA,eAAe,CAAC,GAAD,CAAf;AACAC,MAAAA,iBAAiB,CAAC,GAAD,CAAjB;AACAC,MAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAlD,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAmD,MAAAA,eAAe,CAAC,CACZ;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,OAAZ;AAAqB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,OADY,EAEZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,QAAZ;AAAsB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA5C,OAFY,EAGZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,OAAZ;AAAqB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,OAHY,EAIZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,OAAZ;AAAqB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,OAJY,EAKZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,MAAZ;AAAoB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA1C,OALY,EAMZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,MAAZ;AAAoB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA1C,OANY,EAOZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,QAAZ;AAAsB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA5C,OAPY,EAQZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,MAAZ;AAAoB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA1C,OARY,EASZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,OAAZ;AAAqB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,OATY,EAUZ;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAM3C,QAAAA,IAAI,EAAE,WAAZ;AAAyB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA/C,OAVY,EAWZ;AAACF,QAAAA,EAAE,EAAC,EAAJ;AAAO3C,QAAAA,IAAI,EAAE,MAAb;AAAqB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,OAXY,EAYZ;AAACF,QAAAA,EAAE,EAAC,EAAJ;AAAO3C,QAAAA,IAAI,EAAE,QAAb;AAAuB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA7C,OAZY,EAaZ;AAACF,QAAAA,EAAE,EAAC,EAAJ;AAAO3C,QAAAA,IAAI,EAAE,MAAb;AAAqB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,OAbY,EAcZ;AAACF,QAAAA,EAAE,EAAC,EAAJ;AAAO3C,QAAAA,IAAI,EAAE,OAAb;AAAsB4C,QAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA5C,OAdY,CAAD,CAAf;AAgBAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAC,MAAAA,WAAW,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CAAD,CAAX;AACAC,MAAAA,aAAa,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CAAD,CAAb;AACAnF,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AAEJ,GAnCD,EAmCE,CAACyB,YAAD,CAnCF;;AApJJ,mBAyL2ClD,QAAQ,CAAC,CAC5C;AAACuG,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,OAAZ;AAAqB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,GAD4C,EAE5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,QAAZ;AAAsB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA5C,GAF4C,EAG5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,OAAZ;AAAqB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,GAH4C,EAI5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,OAAZ;AAAqB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,GAJ4C,EAK5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,MAAZ;AAAoB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA1C,GAL4C,EAM5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,MAAZ;AAAoB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA1C,GAN4C,EAO5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,QAAZ;AAAsB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA5C,GAP4C,EAQ5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,MAAZ;AAAoB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA1C,GAR4C,EAS5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,OAAZ;AAAqB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,GAT4C,EAU5C;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAM3C,IAAAA,IAAI,EAAE,WAAZ;AAAyB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA/C,GAV4C,EAW5C;AAACF,IAAAA,EAAE,EAAC,EAAJ;AAAO3C,IAAAA,IAAI,EAAE,MAAb;AAAqB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,GAX4C,EAY5C;AAACF,IAAAA,EAAE,EAAC,EAAJ;AAAO3C,IAAAA,IAAI,EAAE,QAAb;AAAuB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA7C,GAZ4C,EAa5C;AAACF,IAAAA,EAAE,EAAC,EAAJ;AAAO3C,IAAAA,IAAI,EAAE,MAAb;AAAqB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA3C,GAb4C,EAc5C;AAACF,IAAAA,EAAE,EAAC,EAAJ;AAAO3C,IAAAA,IAAI,EAAE,OAAb;AAAsB4C,IAAAA,eAAe,EAACvG,KAAK,CAACwG;AAA5C,GAd4C,CAAD,CAzLnD;AAAA;AAAA,MAyLUI,YAzLV;AAAA,MAyLwBP,eAzLxB;;AA2MIzG,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAK,CAEpB,CAFD,EAEE,CAAC+C,YAAD,CAFF;;AA3MJ,oBAgN8C9C,QAAQ,CAAC,EAAD,CAhNtD;AAAA;AAAA,MAgNWiE,aAhNX;AAAA,MAgN0B4B,gBAhN1B;;AAAA,oBAiN4C7F,QAAQ,CAAC,EAAD,CAjNpD;AAAA;AAAA,MAiNWwE,YAjNX;AAAA,MAiNyBsB,eAjNzB;;AAAA,oBAkN4C9F,QAAQ,CAAC,GAAD,CAlNpD;AAAA;AAAA,MAkNW6E,YAlNX;AAAA,MAkNyBkB,eAlNzB;;AAAA,oBAmNkD/F,QAAQ,CAAC,GAAD,CAnN1D;AAAA;AAAA,MAmNW+E,eAnNX;AAAA,MAmN4BiB,kBAnN5B;;AAAA,oBAoN4ChG,QAAQ,CAAC,GAAD,CApNpD;AAAA;AAAA,MAoNWiF,YApNX;AAAA,MAoNyBgB,eApNzB;;AAAA,oBAqN4CjG,QAAQ,CAAC,GAAD,CArNpD;AAAA;AAAA,MAqNWmF,YArNX;AAAA,MAqNyBe,eArNzB;;AAAA,oBAsN4ClG,QAAQ,CAAC,GAAD,CAtNpD;AAAA;AAAA,MAsNWqF,YAtNX;AAAA,MAsNyBc,eAtNzB;;AAAA,oBAuNgDnG,QAAQ,CAAC,GAAD,CAvNxD;AAAA;AAAA,MAuNWuF,cAvNX;AAAA,MAuN2Ba,iBAvN3B;;AAAA,oBAwN4DpG,QAAQ,CAAC,EAAD,CAxNpE;AAAA;AAAA,MAwNWyF,oBAxNX;AAAA,MAwNiCY,uBAxNjC;;AAAA,oBA2NoCrG,QAAQ,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CAAD,CA3N5C;AAAA;AAAA,MA2NW8D,QA3NX;AAAA,MA2NqB6C,WA3NrB;;AAAA,oBA4NwC3G,QAAQ,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CAAD,CA5NhD;AAAA;AAAA,MA4NW+D,UA5NX;AAAA,MA4NuB6C,aA5NvB;;AAAA,oBA8NoC5G,QAAQ,CAAC,EAAD,CA9N5C;AAAA;AAAA,MA8NUyD,SA9NV;AAAA,MA8NoBiD,YA9NpB;;AAgOIlE,EAAAA,OAAO,CAACC,GAAR,CAAYgB,SAAS,CAACqD,MAAtB;;AAEA,WAASC,SAAT,CAAmBC,KAAnB,EACA;AACI,QAAIC,UAAU,sBAAOnD,QAAP,CAAd;;AAEA,QAAGmD,UAAU,CAACD,KAAD,CAAb,EACIC,UAAU,CAACD,KAAD,CAAV,GAAoB,KAApB,CADJ,KAGIC,UAAU,CAACD,KAAD,CAAV,GAAoB,IAApB;AAEJL,IAAAA,WAAW,oBAAKM,UAAL,EAAX;AAEH;;AAED,WAASC,WAAT,CAAqBF,KAArB,EACA;AACI,QAAIC,UAAU,sBAAOlD,UAAP,CAAd;;AAEA,QAAGkD,UAAU,CAACD,KAAD,CAAb,EACIC,UAAU,CAACD,KAAD,CAAV,GAAoB,KAApB,CADJ,KAGIC,UAAU,CAACD,KAAD,CAAV,GAAoB,IAApB;AAEJJ,IAAAA,aAAa,oBAAKK,UAAL,EAAb;AAEH;;AAGD,WAASE,YAAT,CAAsBZ,EAAtB,EACA;AAEI,QAAIlD,SAAS,sBAAOwD,YAAP,CAAb;;AAGA,QAAIO,aAAa,sBAAO3D,SAAP,CAAjB;;AAGA,QAAI4D,UAAU,qBAAOR,YAAY,CAACN,EAAD,CAAnB,CAAd;;AAGA,QAAGlD,SAAS,CAACkD,EAAD,CAAT,CAAcC,eAAd,IAAiCvG,KAAK,CAACwG,KAA1C,EACA;AAEI,UAAGW,aAAa,CAACN,MAAd,IAAwB,CAA3B,EACA;AAEI,YAAIQ,QAAQ,GAAGF,aAAa,CAAC,CAAD,CAAb,CAAiBb,EAAhC;AACAa,QAAAA,aAAa,CAACG,GAAd;AAGAlE,QAAAA,SAAS,CAACiE,QAAD,CAAT,CAAoBd,eAApB,GAAsCvG,KAAK,CAACwG,KAA5C;AAGApD,QAAAA,SAAS,CAACkD,EAAD,CAAT,CAAcC,eAAd,GAAgCvG,KAAK,CAACuH,SAAtC;AAGAJ,QAAAA,aAAa,CAACzD,IAAd,CAAmBN,SAAS,CAACkD,EAAD,CAA5B;AAGAG,QAAAA,YAAY,oBAAKU,aAAL,EAAZ;AAGAd,QAAAA,eAAe,oBAAKjD,SAAL,EAAf;AAEH,OArBD,MAuBA;AAGIA,QAAAA,SAAS,CAACkD,EAAD,CAAT,CAAcC,eAAd,GAAgCvG,KAAK,CAACuH,SAAtC;AAGAJ,QAAAA,aAAa,CAACzD,IAAd,CAAmBN,SAAS,CAACkD,EAAD,CAA5B;AAGAG,QAAAA,YAAY,CAAC,UAAAe,cAAc;AAAA,8CAAQA,cAAR,IAAwBJ,UAAxB;AAAA,SAAf,CAAZ;AAGAf,QAAAA,eAAe,oBAAKjD,SAAL,EAAf;AACH;AACJ,KAxCD,MA0CA;AAEIA,MAAAA,SAAS,CAACkD,EAAD,CAAT,CAAcC,eAAd,GAAgCvG,KAAK,CAACwG,KAAtC;AAGAW,MAAAA,aAAa,GAAGA,aAAa,CAACM,MAAd,CAAqB,UAAC9D,IAAD;AAAA,eAAUA,IAAI,CAAC2C,EAAL,IAAWA,EAArB;AAAA,OAArB,CAAhB;AAGAG,MAAAA,YAAY,oBAAKU,aAAL,EAAZ;AACAd,MAAAA,eAAe,oBAAKjD,SAAL,EAAf;AACH;AAGJ;;AAED,SACI,oBAAC,uBAAD;AAAyB,IAAA,qBAAqB,EAAI;AAACsE,MAAAA,QAAQ,EAAC;AAAV,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAG,cAAtB;AAAqC,IAAA,MAAM,EAAI,KAA/C;AAAsD,IAAA,eAAe,EAAI5H,KAAK,CAACwG,KAA/E;AAAsF,IAAA,WAAW,EAAI,IAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAImB,MAAM,CAACE,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI3D,OAAO,wBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIyD,MAAM,CAACG,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,MAAM,EAAC,GAAR;AAAaC,MAAAA,KAAK,EAAC,GAAnB;AAAwBC,MAAAA,WAAW,EAAC,CAApC;AAAuCC,MAAAA,WAAW,EAAC,SAAnD;AAA8DC,MAAAA,YAAY,EAAC,EAA3E;AAA+EC,MAAAA,cAAc,EAAC,QAA9F;AAAwGC,MAAAA,UAAU,EAAC;AAAnH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEvG,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKP,KAAK,GAAG,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEmB,MAAAA,GAAG,EAAEnB;AAAP,KAAf;AAA+B,IAAA,KAAK,EAAE;AAAEyG,MAAAA,KAAK,EAAE,GAAT;AAAcD,MAAAA,MAAM,EAAE;AAAtB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACN,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI7D,OAAO,uBAAxB;AAAiD,IAAA,KAAK,EAAI;AAACoE,MAAAA,UAAU,EAAC,SAAZ;AAAuBP,MAAAA,MAAM,EAAC,EAA9B;AAAkCC,MAAAA,KAAK,EAAC;AAAxC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACO,MAAAA,SAAS,EAAC;AAAX,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDANJ,CAHA,CAJJ,CAJJ,EAuBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIZ,MAAM,CAACa,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,YAAY,EAAC;AAAd,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,QAAQ,EAAC,EAAV;AAAaC,MAAAA,KAAK,EAAC;AAAnB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,SAAD;AACQ,IAAA,WAAW,EAAG,gBADtB;AAEQ,IAAA,KAAK,EAAI;AACLT,MAAAA,WAAW,EAAC,SADP;AACkBD,MAAAA,WAAW,EAAC,CAD9B;AACgCE,MAAAA,YAAY,EAAC,CAD7C;AAEL5B,MAAAA,eAAe,EAAC,OAFX;AAGLyB,MAAAA,KAAK,EAAC,MAHD;AAILY,MAAAA,WAAW,EAAC,EAJP;AAKLC,MAAAA,eAAe,EAACpH,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA2B;AALtC,KAFjB;AASQ,IAAA,oBAAoB,EAAG,OAT/B;AAUQ,IAAA,YAAY,EAAI,sBAACoH,IAAD,EAAU;AAAClD,MAAAA,gBAAgB,CAACkD,IAAD,CAAhB;AAAwBvG,MAAAA,OAAO,CAACC,GAAR,CAAYsG,IAAZ;AAAkB,KAV7E;AAWQ,IAAA,KAAK,EAAI9E,aAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAiBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAAC0E,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,KAAK,EAAC;AAApB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AACQ,IAAA,WAAW,EAAG,eADtB;AAEQ,IAAA,KAAK,EAAI;AACLT,MAAAA,WAAW,EAAC,SADP;AACkBD,MAAAA,WAAW,EAAC,CAD9B;AACgCE,MAAAA,YAAY,EAAC,CAD7C;AAEL5B,MAAAA,eAAe,EAAC,OAFX;AAGLyB,MAAAA,KAAK,EAAC,MAHD;AAILY,MAAAA,WAAW,EAAC,EAJP;AAKLC,MAAAA,eAAe,EAACpH,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA2B;AALtC,KAFjB;AASQ,IAAA,oBAAoB,EAAG,OAT/B;AAUQ,IAAA,YAAY,EAAI,sBAACoH,IAAD;AAAA,aAAUjD,eAAe,CAACiD,IAAD,CAAzB;AAAA,KAVxB;AAWQ,IAAA,KAAK,EAAIvE,YAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAjBJ,CADJ,CAvBJ,EA6DI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIoD,MAAM,CAACoB,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACL,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,KAAK,EAAC;AAApB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACK,MAAAA,aAAa,EAAC,KAAf;AAAsBC,MAAAA,QAAQ,EAAC,MAA/B;AAAuCb,MAAAA,cAAc,EAAC;AAAtD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIxB,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,CAAD,CAAZ,CAAgBjD,IAA1C;AAAgD,IAAA,cAAc,EAAIiD,YAAY,CAAC,CAAD,CAAZ,CAAgBL,eAAlF;AAAmG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,EAAvC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,EAAD,CAAZ,CAAiBjD,IAA3C;AAAiD,IAAA,cAAc,EAAIiD,YAAY,CAAC,EAAD,CAAZ,CAAiBL,eAApF;AAAqG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,EAAD,CAAZ,CAAiBN,EAAxC,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,EAAD,CAAZ,CAAiBjD,IAA3C;AAAiD,IAAA,cAAc,EAAIiD,YAAY,CAAC,EAAD,CAAZ,CAAiBL,eAApF;AAAqG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,EAAD,CAAZ,CAAiBN,EAAxC,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAAC0C,MAAAA,aAAa,EAAC,KAAf;AAAsBZ,MAAAA,cAAc,EAAC,eAArC;AAAsDJ,MAAAA,KAAK,EAAC;AAA5D,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIpB,YAAY,CAAC,EAAD,CAAZ,CAAiBjD,IAA3C;AAAiD,IAAA,cAAc,EAAIiD,YAAY,CAAC,EAAD,CAAZ,CAAiBL,eAApF;AAAqG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,EAAD,CAAZ,CAAiBN,EAAxC,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAIM,YAAY,CAAC,EAAD,CAAZ,CAAiBjD,IAA3C;AAAiD,IAAA,cAAc,EAAIiD,YAAY,CAAC,EAAD,CAAZ,CAAiBL,eAApF;AAAqG,IAAA,QAAQ,EAAIW,YAAY,CAACgC,IAAb,CAAkB,IAAlB,EAAuBtC,YAAY,CAAC,EAAD,CAAZ,CAAiBN,EAAxC,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAbJ,CAFJ,CA7DJ,EAoFI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIqB,MAAM,CAACwB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACH,MAAAA,aAAa,EAAC,KAAf;AAAsBZ,MAAAA,cAAc,EAAC;AAArC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACT,MAAM,CAACyB,WAAR,EAAqBzB,MAAM,CAAC0B,iBAA5B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACL,MAAAA,aAAa,EAAC;AAAf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAMlC,SAAS,CAAC,CAAD,CAAf;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIjD,QAAQ,CAAC,CAAD,CAAR,IAAe,KAAf,GACA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAIK,OAAO,2BAAxB;AAAqD,IAAA,UAAU,EAAG,OAAlE;AAA0E,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAGA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI7D,OAAO,qBAAxB;AAA+C,IAAA,UAAU,EAAG,OAA5D;AAAoE,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAFJ,EAUI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAMjB,SAAS,CAAC,CAAD,CAAf;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIjD,QAAQ,CAAC,CAAD,CAAR,IAAe,KAAf,GACA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAIK,OAAO,2BAAxB;AAAqD,IAAA,UAAU,EAAG,OAAlE;AAA0E,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAGA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI7D,OAAO,qBAAxB;AAA+C,IAAA,UAAU,EAAG,OAA5D;AAAoE,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAVJ,EAkBI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAMjB,SAAS,CAAC,CAAD,CAAf;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIjD,QAAQ,CAAC,CAAD,CAAR,IAAe,KAAf,GACA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAIK,OAAO,2BAAxB;AAAqD,IAAA,UAAU,EAAG,OAAlE;AAA0E,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAGA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI7D,OAAO,qBAAxB;AAA+C,IAAA,UAAU,EAAG,OAA5D;AAAoE,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAlBJ,CAFJ,CADJ,EAiCI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACJ,MAAM,CAACyB,WAAR,EAAqBzB,MAAM,CAAC0B,iBAA5B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACL,MAAAA,aAAa,EAAC;AAAf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAM/B,WAAW,CAAC,CAAD,CAAjB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMnD,UAAU,CAAC,CAAD,CAAV,IAAiB,KAAjB,GACD,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAII,OAAO,6BAAxB;AAAuD,IAAA,UAAU,EAAG,OAApE;AAA4E,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGF,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI7D,OAAO,uBAAxB;AAAiD,IAAA,UAAU,EAAG,OAA9D;AAAsE,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADA,EAOA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAMd,WAAW,CAAC,CAAD,CAAjB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMnD,UAAU,CAAC,CAAD,CAAV,IAAiB,KAAjB,GACD,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAII,OAAO,6BAAxB;AAAuD,IAAA,UAAU,EAAG,OAApE;AAA4E,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGF,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI7D,OAAO,uBAAxB;AAAiD,IAAA,UAAU,EAAG,OAA9D;AAAsE,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAPA,EAaA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAMd,WAAW,CAAC,CAAD,CAAjB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMnD,UAAU,CAAC,CAAD,CAAV,IAAiB,KAAjB,GACD,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAII,OAAO,6BAAxB;AAAuD,IAAA,UAAU,EAAG,OAApE;AAA4E,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGF,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI7D,OAAO,uBAAxB;AAAiD,IAAA,UAAU,EAAG,OAA9D;AAAsE,IAAA,KAAK,EAAI;AAAC8D,MAAAA,KAAK,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAC;AAAnB,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAbA,CAFJ,CAjCJ,CAHJ,CApFJ,EAmJI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,KAAK,EAAC,KAAP;AAAcsB,MAAAA,UAAU,EAAC,EAAzB;AAA6BV,MAAAA,WAAW,EAAC;AAAzC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACF,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAA1B,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAI;AAACZ,MAAAA,KAAK,EAAC3I,KAAK,CAACuH,SAAb;AAAwBiC,MAAAA,MAAM,EAAC;AAA/B,KADb;AAEI,IAAA,OAAO,EAAIrI,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,EAMI,oBAAC,mBAAD;AACI,IAAA,SAAS,EAAEL,mBADf;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,SAAS,EAAEO,aAHf;AAII,IAAA,QAAQ,EAAED,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAaI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOqI,eAAe,CAACxI,YAAD,CAAtB,CAbJ,CAnJJ,EAsKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI0G,MAAM,CAAC+B,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACf,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACb,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ,MAA1B;AAAkCI,MAAAA,UAAU,EAAC;AAA7C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArC,kDADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACX,MAAAA,aAAa,EAAC,KAAf;AAAsBX,MAAAA,UAAU,EAAC;AAAjC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACM,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4D,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACI,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA5D,YADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAG,IADlB;AAEI,IAAA,KAAK,EAAI;AAACzB,MAAAA,WAAW,EAAC,SAAb;AAAwBD,MAAAA,WAAW,EAAC,CAApC;AAAsCE,MAAAA,YAAY,EAAC,CAAnD;AAAqD5B,MAAAA,eAAe,EAAC,OAArE;AAA6EqC,MAAAA,WAAW,EAAC,EAAzF;AAA6FgB,MAAAA,gBAAgB,EAAC;AAA9G,KAFb;AAGI,IAAA,YAAY,EAAI,sBAACd,IAAD;AAAA,aAAUhD,eAAe,CAACgD,IAAD,CAAzB;AAAA,KAHpB;AAII,IAAA,KAAK,EAAIlE,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAAC+D,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CAFJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACP,MAAAA,aAAa,EAAC,KAAf;AAAsBX,MAAAA,UAAU,EAAC;AAAjC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACM,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4D,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACI,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5D,YADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAG,IADlB;AAEI,IAAA,KAAK,EAAI;AAACzB,MAAAA,WAAW,EAAC,SAAb;AAAwBD,MAAAA,WAAW,EAAC,CAApC;AAAsCE,MAAAA,YAAY,EAAC,CAAnD;AAAqD5B,MAAAA,eAAe,EAAC,OAArE;AAA6EqC,MAAAA,WAAW,EAAC,EAAzF;AAA6FgB,MAAAA,gBAAgB,EAAC;AAA9G,KAFb;AAGI,IAAA,YAAY,EAAI,sBAACd,IAAD;AAAA,aAAU/C,kBAAkB,CAAC+C,IAAD,CAA5B;AAAA,KAHpB;AAII,IAAA,KAAK,EAAIhE,eAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAAC6D,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CAZJ,EAsBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACP,MAAAA,aAAa,EAAC,KAAf;AAAsBX,MAAAA,UAAU,EAAC;AAAjC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACM,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4D,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACI,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA5D,YADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAG,IADlB;AAEI,IAAA,KAAK,EAAI;AAACzB,MAAAA,WAAW,EAAC,SAAb;AAAwBD,MAAAA,WAAW,EAAC,CAApC;AAAsCE,MAAAA,YAAY,EAAC,CAAnD;AAAqD5B,MAAAA,eAAe,EAAC,OAArE;AAA6EqC,MAAAA,WAAW,EAAC,EAAzF;AAA6FgB,MAAAA,gBAAgB,EAAC;AAA9G,KAFb;AAGI,IAAA,YAAY,EAAI,sBAACd,IAAD;AAAA,aAAU9C,eAAe,CAAC8C,IAAD,CAAzB;AAAA,KAHpB;AAII,IAAA,KAAK,EAAI9D,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAAC2D,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CAtBJ,EAgCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACP,MAAAA,aAAa,EAAC,KAAf;AAAsBX,MAAAA,UAAU,EAAC;AAAjC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACM,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4D,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACI,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5D,YADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAG,IADlB;AAEI,IAAA,KAAK,EAAI;AAACzB,MAAAA,WAAW,EAAC,SAAb;AAAwBD,MAAAA,WAAW,EAAC,CAApC;AAAsCE,MAAAA,YAAY,EAAC,CAAnD;AAAqD5B,MAAAA,eAAe,EAAC,OAArE;AAA6EqC,MAAAA,WAAW,EAAC,EAAzF;AAA6FgB,MAAAA,gBAAgB,EAAC;AAA9G,KAFb;AAGI,IAAA,YAAY,EAAI,sBAACd,IAAD;AAAA,aAAU7C,eAAe,CAAC6C,IAAD,CAAzB;AAAA,KAHpB;AAII,IAAA,KAAK,EAAI5D,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACyD,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CAhCJ,EA0CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACP,MAAAA,aAAa,EAAC,KAAf;AAAsBX,MAAAA,UAAU,EAAC;AAAjC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACM,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4D,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACI,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA5D,YADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAG,IADlB;AAEI,IAAA,KAAK,EAAI;AAACzB,MAAAA,WAAW,EAAC,SAAb;AAAwBD,MAAAA,WAAW,EAAC,CAApC;AAAsCE,MAAAA,YAAY,EAAC,CAAnD;AAAqD5B,MAAAA,eAAe,EAAC,OAArE;AAA6EqC,MAAAA,WAAW,EAAC,EAAzF;AAA6FgB,MAAAA,gBAAgB,EAAC;AAA9G,KAFb;AAGI,IAAA,YAAY,EAAI,sBAACd,IAAD;AAAA,aAAU5C,eAAe,CAAC4C,IAAD,CAAzB;AAAA,KAHpB;AAII,IAAA,KAAK,EAAI1D,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACuD,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CA1CJ,EAoDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACP,MAAAA,aAAa,EAAC,KAAf;AAAsBX,MAAAA,UAAU,EAAC;AAAjC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACM,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4D,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACI,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA5D,YADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAG,IADlB;AAEI,IAAA,KAAK,EAAI;AAACzB,MAAAA,WAAW,EAAC,SAAb;AAAwBD,MAAAA,WAAW,EAAC,CAApC;AAAsCE,MAAAA,YAAY,EAAC,CAAnD;AAAqD5B,MAAAA,eAAe,EAAC,OAArE;AAA6EqC,MAAAA,WAAW,EAAC,EAAzF;AAA6FgB,MAAAA,gBAAgB,EAAC;AAA9G,KAFb;AAGI,IAAA,YAAY,EAAI,sBAACd,IAAD;AAAA,aAAU3C,iBAAiB,CAAC2C,IAAD,CAA3B;AAAA,KAHpB;AAII,IAAA,KAAK,EAAIxD,cAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACqD,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CApDJ,CAtKJ,EAuOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI5B,MAAM,CAACkC,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACnB,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,KAAK,EAAC3I,KAAK,CAACuJ;AAA1B,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAG,sEADlB;AAEI,IAAA,KAAK,EAAI;AACLrB,MAAAA,WAAW,EAAClI,KAAK,CAACwG,KADb;AACmByB,MAAAA,WAAW,EAAC,CAD/B;AACkC1B,MAAAA,eAAe,EAAE,OADnD;AAC4D4B,MAAAA,YAAY,EAAC,CADzE;AAELS,MAAAA,WAAW,EAAC,EAFP;AAEUU,MAAAA,UAAU,EAAC,CAFrB;AAEuBQ,MAAAA,SAAS,EAAC,CAFjC;AAEqCC,MAAAA,iBAAiB,EAAC,KAFvD;AAE8DlB,MAAAA,eAAe,EAACpH,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B;AAF1G,KAFb;AAKI,IAAA,oBAAoB,EAAG,OAL3B;AAMI,IAAA,aAAa,EAAI,EANrB;AAOI,IAAA,SAAS,MAPb;AAQI,IAAA,YAAY,EAAI,sBAACoH,IAAD;AAAA,aAAU1C,uBAAuB,CAAC0C,IAAD,CAAjC;AAAA,KARpB;AASI,IAAA,KAAK,EAAItD,oBATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAeI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACwD,MAAAA,aAAa,EAAC,KAAf;AAAsBZ,MAAAA,cAAc,EAAC,eAArC;AAAsD0B,MAAAA,SAAS,EAAC;AAAhE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAI;AAACvD,MAAAA,eAAe,EAACvG,KAAK,CAACwG,KAAvB;AAA8BwC,MAAAA,aAAa,EAAC,KAA5C;AAAmDb,MAAAA,YAAY,EAAC,CAAhE;AAAmEE,MAAAA,UAAU,EAAC,QAA9E;AAAwFL,MAAAA,KAAK,EAAC,GAA9F;AAAmGa,MAAAA,eAAe,EAAC,CAAnH;AAAsHW,MAAAA,MAAM,EAAC;AAA7H,KADb;AAEI,IAAA,OAAO,EAAI,mBAAM;AAACrG,MAAAA,WAAW;AAAIvC,MAAAA,UAAU,CAACoJ,QAAX,CAAoB,MAApB;AAA4B,KAFjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAG,QAAb;AAAsB,IAAA,IAAI,EAAG,kBAA7B;AAAgD,IAAA,KAAK,EAAG,OAAxD;AAAgE,IAAA,KAAK,EAAI;AAACpB,MAAAA,WAAW,EAAC;AAAb,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACD,MAAAA,KAAK,EAAC,OAAP;AAAgBC,MAAAA,WAAW,EAAC,EAA5B;AAAgCF,MAAAA,QAAQ,EAAC;AAAzC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CADJ,EAQI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAI;AAACnC,MAAAA,eAAe,EAACvG,KAAK,CAACwG,KAAvB;AAA8BwC,MAAAA,aAAa,EAAC,KAA5C;AAAmDb,MAAAA,YAAY,EAAC,CAAhE;AAAmEE,MAAAA,UAAU,EAAC,QAA9E;AAAwFL,MAAAA,KAAK,EAAC,GAA9F;AAAmGwB,MAAAA,MAAM,EAAC;AAA1G,KADb;AAEI,IAAA,OAAO,EAAI;AAAA,aAAM5I,UAAU,CAACoJ,QAAX,CAAoB,MAApB,CAAN;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,UAAZ;AAAuB,IAAA,IAAI,EAAG,SAA9B;AAAwC,IAAA,KAAK,EAAG,OAAhD;AAAwD,IAAA,KAAK,EAAI;AAACpB,MAAAA,WAAW,EAAC;AAAb,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACA,MAAAA,WAAW,EAAC,EAAb;AAAiBD,MAAAA,KAAK,EAAC,OAAvB;AAAgCD,MAAAA,QAAQ,EAAC;AAAzC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CARJ,CADJ,CAfJ,CAvOJ,EA2QI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,QAAhB;AAAyB,IAAA,OAAO,EAAI;AAAA,aAAMnG,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCjB,KAAlC,CAAN;AAAA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3QJ,CAFJ,CADJ;;AAyRA,WAASkI,eAAT,CAAyBnI,IAAzB,EACA;AACI,QAAI2I,QAAQ,GAAG3I,IAAI,CAAC8C,QAAL,GAAgB8F,KAAhB,CAAsB,GAAtB,CAAf;AACA,QAAIC,KAAK,GAAGF,QAAQ,CAAC,CAAD,CAApB;AACA,QAAIG,GAAG,GAAGH,QAAQ,CAAC,CAAD,CAAlB;AACA,QAAII,IAAI,GAAGJ,QAAQ,CAAC,CAAD,CAAnB;AAEA,WAAUE,KAAV,SAAmBC,GAAnB,UAA2BC,IAA3B;AAEH;;AAGD,WAAS7F,aAAT,CAAuBlD,IAAvB,EACA;AACI,QAAIgJ,YAAY,GAAGhJ,IAAI,CAAC8C,QAAL,EAAnB;AAEA,QAAIgG,GAAJ;AACA,QAAID,KAAK,GAAG,CAAC,CAAb;AACA,QAAIE,IAAJ;AAEA,QAAIE,SAAS,GAAGD,YAAY,CAACJ,KAAb,CAAmB,GAAnB,CAAhB;;AAEA,YAAOK,SAAS,CAAC,CAAD,CAAT,CAAatG,WAAb,EAAP;AAEI,WAAK,KAAL;AACIkG,QAAAA,KAAK,GAAG,CAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,CAAR;AACA;;AAEJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,CAAR;AACA;;AAEJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,CAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,CAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,CAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,CAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,CAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,CAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,EAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,EAAR;AACA;;AACJ,WAAK,KAAL;AACIA,QAAAA,KAAK,GAAG,EAAR;AACA;AAvCR;;AA0CAC,IAAAA,GAAG,GAAGG,SAAS,CAAC,CAAD,CAAf;AACAF,IAAAA,IAAI,GAAGE,SAAS,CAAC,CAAD,CAAhB;AACAhI,IAAAA,OAAO,CAACC,GAAR,CAAY+H,SAAS,CAAC,CAAD,CAArB;AACAhI,IAAAA,OAAO,CAACC,GAAR,CAAY2H,KAAZ;AAEA,QAAIK,YAAY,GAAMH,IAAN,SAAcF,KAAd,SAAuBC,GAAvC;AAEA,WAAOI,YAAP;AACH;AAGJ;;AAED,IAAM7C,MAAM,GAAG8C,UAAU,CAACC,MAAX,CAAkB;AAC7B9C,EAAAA,aAAa,EAAC;AACV+C,IAAAA,IAAI,EAAC,CADK;AAGVpE,IAAAA,eAAe,EAACvG,KAAK,CAAC4K,UAHZ;AAIVvC,IAAAA,UAAU,EAAC,QAJD;AAKVwC,IAAAA,aAAa,EAAC;AALJ,GADe;AAQ7BhD,EAAAA,wBAAwB,EAAC;AACrBiC,IAAAA,SAAS,EAACrI,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B,EADjB;AAGrB2G,IAAAA,UAAU,EAAC,QAHU;AAIrBN,IAAAA,MAAM,EAAC,GAJc;AAKrBC,IAAAA,KAAK,EAAC;AALe,GARI;AAe7BF,EAAAA,eAAe,EAAC;AACZgD,IAAAA,QAAQ,EAAC,UADG;AAGZzC,IAAAA,UAAU,EAAC,QAHC;AAIZD,IAAAA,cAAc,EAAC,QAJH;AAKZJ,IAAAA,KAAK,EAAC,MALM;AAKCD,IAAAA,MAAM,EAAC;AALR,GAfa;AAsB7BS,EAAAA,aAAa,EAAC;AAEVR,IAAAA,KAAK,EAAC;AAFI,GAtBe;AA0B7Be,EAAAA,4BAA4B,EAAC;AAExBe,IAAAA,SAAS,EAAC,EAFc;AAGzB9B,IAAAA,KAAK,EAAC;AAHmB,GA1BA;AA+B7BmB,EAAAA,gBAAgB,EAChB;AACIG,IAAAA,UAAU,EAAC,EADf;AAEItB,IAAAA,KAAK,EAAC;AAFV,GAhC6B;AAqC7B0B,EAAAA,kBAAkB,EAClB;AAEII,IAAAA,SAAS,EAAC;AAFd,GAtC6B;AA0C7BD,EAAAA,wBAAwB,EACxB;AAEIC,IAAAA,SAAS,EAAC,EAFd;AAEkB9B,IAAAA,KAAK,EAAC;AAFxB,GA3C6B;AAgD7B+C,EAAAA,UAAU,EACV;AACIrC,IAAAA,QAAQ,EAAC,EADb;AAEIC,IAAAA,KAAK,EAAE3I,KAAK,CAACuJ,MAFjB;AAGII,IAAAA,UAAU,EAAC;AAHf,GAjD6B;AAsD7BP,EAAAA,WAAW,EAAC;AACRV,IAAAA,QAAQ,EAAC;AADD,GAtDiB;AAyD7BW,EAAAA,iBAAiB,EAAC;AACdV,IAAAA,KAAK,EAAE3I,KAAK,CAACuJ;AADC;AAzDW,CAAlB,CAAf;AAiEA,SAAQ5I,QAAR","sourcesContent":["import React,{useContext, useEffect, useState} from 'react'\r\nimport {Text, View, Button, StyleSheet, TextInput,Image,StatusBar, TouchableOpacity, ImageBackground, ScrollView, Platform} from 'react-native'\r\nimport Color from '../constants/colors';\r\nimport {Header} from '../components/Header'\r\nimport { Input } from 'react-native-elements';\r\nimport {RoundButton} from '../components/RoundButton'\r\nimport { RoundButtonLarge } from '../components/RoundButtonLarge';\r\nimport {Icon} from 'react-native-elements'\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Constants from 'expo-constants';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\n\r\nfunction NewEntry({navigation, route})\r\n{\r\n\r\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n    const showDatePicker = () => {\r\n      setDatePickerVisibility(true);\r\n    };\r\n  \r\n    const hideDatePicker = () => {\r\n      setDatePickerVisibility(false);\r\n    };\r\n  \r\n    const handleConfirm = (date) => {\r\n      // console.warn(\"A date has been picked: \", date);\r\n      hideDatePicker();\r\n      setSelectedDate(date);\r\n    };\r\n\r\n    // Execute after plant entries update and delete has been pressed\r\n    React.useEffect(() =>{\r\n\r\n        \r\n\r\n    },[selectedDate])\r\n\r\n\r\n    // Image Picker \r\n    const [image, setImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n        if (Platform.OS !== 'web') {\r\n            const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\r\n            if (status !== 'granted') {\r\n            alert('Sorry, we need camera roll permissions to make this work!');\r\n            }\r\n        }\r\n        })();\r\n    }, []);\r\n\r\n    const pickImage = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n        });\r\n\r\n        console.log(result);\r\n\r\n        if (!result.cancelled) {\r\n        setImage(result.uri);\r\n        }\r\n    };\r\n\r\n    // End Image Picker\r\n  \r\n\r\n\r\n\r\n    const {plantEntriesContext, keyContext} = useContext(GlobalContext) \r\n\r\n    const[plantEntries, setPlantEntries] = plantEntriesContext;\r\n    const[myKey, setMyKey] = keyContext;\r\n    \r\n    const[toggleSubmit, setToggleSubmit] = useState(false);\r\n\r\n\r\n    \r\n    function submitEntry()\r\n    {\r\n        let tempArray = [];\r\n        let sunlight = 0;\r\n        let water = 0;\r\n        let key = myKey;\r\n\r\n        for(let button of buttonSet)\r\n        {\r\n            tempArray.push(button.name);\r\n        }\r\n\r\n        for(let i = 0; i < 3; i++)\r\n        {\r\n            if(sunInput[i] == true)\r\n                sunlight++;\r\n        }\r\n\r\n        for(let i = 0; i < 3; i++)\r\n        {\r\n            if(waterInput[i] == true)\r\n                water++;\r\n        }\r\n\r\n     \r\n       \r\n        let myImage;\r\n\r\n        switch(nicknameInput.toLowerCase())\r\n        {\r\n            case 'pear':\r\n                myImage = require('../assets/pear.jpg');\r\n                break;\r\n            case 'apple':\r\n                myImage = require('../assets/apple.png');\r\n                break;\r\n            case 'rose':\r\n                myImage = require('../assets/rose.jpg');\r\n                break;\r\n            case 'banana':\r\n                myImage = require('../assets/banana.png');\r\n                break;\r\n            case 'grape fruit':\r\n                myImage = require('../assets/grapefruit.jpg');\r\n                break;\r\n            default:\r\n                myImage = require('../assets/tempFlower.png');\r\n        }\r\n\r\n        setPlantEntries(currentPlants => [...currentPlants,\r\n        {\r\n            key:key.toString(),\r\n            nickname:nicknameInput,\r\n            species:speciesInput,\r\n            date:convertedDate(selectedDate),\r\n            classification:[...tempArray],\r\n            image:image,\r\n            water:water,\r\n            sunlight:sunlight,\r\n            reminders:{\r\n                watered:wateredInput,\r\n                fertilized:fertilizedInput,\r\n                rotated:rotatedInput,\r\n                prunned:prunnedInput,\r\n                trimmed:trimmedInput,\r\n                replanted:replantedInput,\r\n            },\r\n            notes:additionalNotesInput,\r\n            completedTask:[false,false],\r\n            deleteEntry:false,\r\n            imageUrl:image\r\n        }])\r\n\r\n        setToggleSubmit(true);\r\n        setMyKey(myKey+1);\r\n    }\r\n    \r\n\r\n    React.useEffect(() =>{\r\n        if(toggleSubmit)\r\n        {\r\n            setNicknameInput(\"\");\r\n            setSpeciesInput(\"\");\r\n            setWateredInput(\"1\");\r\n            setFertilizedInput(\"1\");\r\n            setRotatedInput(\"1\");\r\n            setPrunnedInput(\"1\");\r\n            setTrimmedInput(\"1\");\r\n            setReplantedInput(\"1\");\r\n            setAdditionalNotesInput(\"\");\r\n            setToggleSubmit(false);\r\n            setRoundButtons([\r\n                {id:0,name: \"Algae\", backgroundColor:Color.theme},\r\n                {id:1,name: \"Flower\", backgroundColor:Color.theme},\r\n                {id:2,name: \"Fruit\", backgroundColor:Color.theme},\r\n                {id:3,name: \"Grass\", backgroundColor:Color.theme},\r\n                {id:4,name: \"Herb\", backgroundColor:Color.theme},\r\n                {id:5,name: \"Moss\", backgroundColor:Color.theme},\r\n                {id:6,name: \"Orchid\", backgroundColor:Color.theme},\r\n                {id:7,name: \"Root\", backgroundColor:Color.theme},\r\n                {id:8,name: \"Shrub\", backgroundColor:Color.theme},\r\n                {id:9,name: \"Succulent\", backgroundColor:Color.theme},\r\n                {id:10,name: \"Tree\", backgroundColor:Color.theme},\r\n                {id:11,name: \"Veggie\", backgroundColor:Color.theme},\r\n                {id:12,name: \"Vine\", backgroundColor:Color.theme},\r\n                {id:13,name: \"Other\", backgroundColor:Color.theme},\r\n            ])\r\n            setButtonSet([]);\r\n            setSunInput([false,false,false]);\r\n            setWaterInput([false,false,false]);\r\n            setImage(\"\");\r\n        }\r\n        \r\n    },[toggleSubmit])\r\n\r\n    const[roundButtons, setRoundButtons] = useState([\r\n        {id:0,name: \"Algae\", backgroundColor:Color.theme},\r\n        {id:1,name: \"Flower\", backgroundColor:Color.theme},\r\n        {id:2,name: \"Fruit\", backgroundColor:Color.theme},\r\n        {id:3,name: \"Grass\", backgroundColor:Color.theme},\r\n        {id:4,name: \"Herb\", backgroundColor:Color.theme},\r\n        {id:5,name: \"Moss\", backgroundColor:Color.theme},\r\n        {id:6,name: \"Orchid\", backgroundColor:Color.theme},\r\n        {id:7,name: \"Root\", backgroundColor:Color.theme},\r\n        {id:8,name: \"Shrub\", backgroundColor:Color.theme},\r\n        {id:9,name: \"Succulent\", backgroundColor:Color.theme},\r\n        {id:10,name: \"Tree\", backgroundColor:Color.theme},\r\n        {id:11,name: \"Veggie\", backgroundColor:Color.theme},\r\n        {id:12,name: \"Vine\", backgroundColor:Color.theme},\r\n        {id:13,name: \"Other\", backgroundColor:Color.theme},\r\n\r\n    ]);\r\n\r\n    React.useEffect(() =>{\r\n \r\n    },[plantEntries])\r\n\r\n    // Inputs and initial states\r\n    const [nicknameInput, setNicknameInput] = useState(\"\");\r\n    const [speciesInput, setSpeciesInput] = useState(\"\");\r\n    const [wateredInput, setWateredInput] = useState(\"1\");\r\n    const [fertilizedInput, setFertilizedInput] = useState(\"1\");\r\n    const [rotatedInput, setRotatedInput] = useState(\"1\");\r\n    const [prunnedInput, setPrunnedInput] = useState(\"1\");\r\n    const [trimmedInput, setTrimmedInput] = useState(\"1\");\r\n    const [replantedInput, setReplantedInput] = useState(\"1\");\r\n    const [additionalNotesInput, setAdditionalNotesInput] = useState(\"\");\r\n\r\n    // Sun\r\n    const [sunInput, setSunInput] = useState([false,false,false]);\r\n    const [waterInput, setWaterInput] = useState([false,false,false]);\r\n\r\n    const[buttonSet,setButtonSet] = useState([]);\r\n\r\n    console.log(buttonSet.length);\r\n\r\n    function toggleSun(index)\r\n    {\r\n        let tempObject = [...sunInput];\r\n\r\n        if(tempObject[index])\r\n            tempObject[index] = false;\r\n        else\r\n            tempObject[index] = true;\r\n\r\n        setSunInput([...tempObject])\r\n\r\n    }\r\n\r\n    function toggleWater(index)\r\n    {\r\n        let tempObject = [...waterInput];\r\n        \r\n        if(tempObject[index])\r\n            tempObject[index] = false;\r\n        else\r\n            tempObject[index] = true;\r\n\r\n        setWaterInput([...tempObject])\r\n\r\n    }\r\n\r\n    // Function that \r\n    function toggleButton(id)\r\n    {\r\n        // Round buttons - All your buttons\r\n        let tempArray = [...roundButtons];\r\n\r\n        // Button set - three button set\r\n        let tempButtonSet = [...buttonSet];\r\n\r\n        // Current Button\r\n        let tempButton = {...roundButtons[id]};\r\n\r\n        // Check what the current color of the button is.\r\n        if(tempArray[id].backgroundColor == Color.theme)\r\n        {\r\n            // If the current length is 3 and we are on to adding a fourth button\r\n            if(tempButtonSet.length == 3)\r\n            {\r\n                // Id of the button we pop and pop it.\r\n                let poppedId = tempButtonSet[2].id;\r\n                tempButtonSet.pop();\r\n\r\n                // Change that button we popped to original\r\n                tempArray[poppedId].backgroundColor = Color.theme;\r\n\r\n                // Change the background color\r\n                tempArray[id].backgroundColor = Color.darkGreen;\r\n\r\n                // Push to our button set\r\n                tempButtonSet.push(tempArray[id]);\r\n\r\n                // Update our button set\r\n                setButtonSet([...tempButtonSet]);\r\n\r\n                // Update our round buttons\r\n                setRoundButtons([...tempArray]);\r\n\r\n            }\r\n            else\r\n            {\r\n            \r\n                // Change the background color\r\n                tempArray[id].backgroundColor = Color.darkGreen;\r\n\r\n                // Push to our button set\r\n                tempButtonSet.push(tempArray[id]);\r\n\r\n                // Update our button set\r\n                setButtonSet(currentButtons => [...currentButtons, tempButton]);\r\n\r\n                // Update our round buttons\r\n                setRoundButtons([...tempArray]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // Change the background color\r\n            tempArray[id].backgroundColor = Color.theme;\r\n\r\n            // Get rid of that button from our button set\r\n            tempButtonSet = tempButtonSet.filter((name) => name.id != id);\r\n\r\n            // Update our button set and round buttons\r\n            setButtonSet([...tempButtonSet]);\r\n            setRoundButtons([...tempArray]);\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    return(\r\n        <KeyboardAwareScrollView contentContainerStyle = {{flexGrow:1}}>\r\n            {/* // Main Container - Purple */}\r\n            <View style = {styles.mainContainer}>\r\n                <StatusBar barstyle = \"dark-content\" hidden = {false} backgroundColor = {Color.theme} translucent = {true}/>\r\n\r\n                {/* Secondary Container Header - Blue */}\r\n                <View style = {styles.secondaryContainerHeader}>\r\n                    <Image source = {require('../assets/header.png')} />\r\n                    \r\n                    {/* Header Container - Red */}\r\n                    <View style = {styles.headerContainer}>\r\n\r\n                        {/* Image Upload Container - Brown */}\r\n                    <View style = {{height:260, width:260, borderWidth:2, borderColor:'#816868', borderRadius:10, justifyContent:'center', alignItems:'center'}}>\r\n                        <TouchableOpacity onPress={pickImage}>\r\n                            \r\n                            {image ? <Image source={{ uri: image }} style={{ width: 150, height: 150 }} />:\r\n                            <Image source = {require('../assets/path1.png')} style = {{resizeMode:'contain', height:50, width:50}} />}\r\n                        </TouchableOpacity>\r\n                        <Text style = {{textAlign:'center'}}>Click this Panel to upload an image of your plant</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Form Container */}\r\n                <View style = {styles.formContainer}>\r\n                    <View>\r\n                        <View style = {{marginBottom:5}}>\r\n                            <Text style = {{fontSize:16,color:'#816868'}}>Plant Nickname</Text>\r\n                            <TextInput \r\n                                    placeholder = \"Plant nickname\"\r\n                                    style = {{\r\n                                        borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                        backgroundColor:'white', \r\n                                        width:'100%', \r\n                                        paddingLeft:10,\r\n                                        paddingVertical:Platform.OS === 'ios' ? 5 :0\r\n                                    }}\r\n                                    placeholderTextColor = 'black'\r\n                                    onChangeText = {(text) => {setNicknameInput(text); console.log(text)}}\r\n                                    value = {nicknameInput}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style = {{fontSize:16, color:'#816868'}}>Plant Species</Text>\r\n                            <TextInput \r\n                                    placeholder = \"Plant Species\"\r\n                                    style = {{\r\n                                        borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                        backgroundColor:'white', \r\n                                        width:'100%', \r\n                                        paddingLeft:10,\r\n                                        paddingVertical:Platform.OS === 'ios' ? 5 :0\r\n                                    }}\r\n                                    placeholderTextColor = 'black'\r\n                                    onChangeText = {(text) => setSpeciesInput(text)}\r\n                                    value = {speciesInput}\r\n                                />\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Plant Classification Container */}\r\n                <View style = {styles.plantClassificationContainer}>\r\n                    <Text style = {{fontSize:16, color:'#816868'}}>Plant Classification (Select up to 3)</Text>\r\n                    <View style = {{flexDirection:'row', flexWrap:'wrap', justifyContent:'space-between'}}>\r\n                        <RoundButtonLarge name = {roundButtons[0].name} highlightColor = {roundButtons[0].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[0].id)} />\r\n                        <RoundButtonLarge name = {roundButtons[1].name} highlightColor = {roundButtons[1].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[1].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[2].name} highlightColor = {roundButtons[2].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[2].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[3].name} highlightColor = {roundButtons[3].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[3].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[4].name} highlightColor = {roundButtons[4].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[4].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[5].name} highlightColor = {roundButtons[5].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[5].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[6].name} highlightColor = {roundButtons[6].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[6].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[7].name} highlightColor = {roundButtons[7].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[7].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[8].name} highlightColor = {roundButtons[8].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[8].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[9].name} highlightColor = {roundButtons[9].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[9].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[10].name} highlightColor = {roundButtons[10].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[10].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[11].name} highlightColor = {roundButtons[11].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[11].id)}/>\r\n                        <View style = {{flexDirection:'row', justifyContent:'space-between', width:'66%'}}>\r\n                            <RoundButtonLarge name = {roundButtons[12].name} highlightColor = {roundButtons[12].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[12].id)}/>\r\n                            <RoundButtonLarge name = {roundButtons[13].name} highlightColor = {roundButtons[13].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[13].id)}/>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Weather Container */}\r\n                <View style = {styles.weatherContainer}>\r\n\r\n                    {/* Sunlight Set */}\r\n                    <View style = {{flexDirection:'row', justifyContent:'space-between'}}>\r\n                        <View>\r\n                            <Text style = {[styles.contentText, styles.ContentTextHeader]}>Sunlight Needed: </Text>\r\n                            <View style = {{flexDirection:'row'}}>\r\n                                \r\n                                <TouchableOpacity onPress = {() => toggleSun(0)}>\r\n                                {\r\n                                    sunInput[0] == false ? \r\n                                    <Image source = {require('../assets/dimmedSun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                    : \r\n                                    <Image source = {require('../assets/sun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                }\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity onPress = {() => toggleSun(1)}>\r\n                                {\r\n                                    sunInput[1] == false ? \r\n                                    <Image source = {require('../assets/dimmedSun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                    : \r\n                                    <Image source = {require('../assets/sun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                }\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity onPress = {() => toggleSun(2)}>\r\n                                {\r\n                                    sunInput[2] == false ? \r\n                                    <Image source = {require('../assets/dimmedSun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                    : \r\n                                    <Image source = {require('../assets/sun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                }\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n\r\n                    {/* Water Set */}\r\n                        <View>\r\n                            <Text style = {[styles.contentText, styles.ContentTextHeader]}>Water Needed:</Text>\r\n                            <View style = {{flexDirection:'row'}}>\r\n                            <TouchableOpacity onPress = {() => toggleWater(0)}>\r\n                                 {waterInput[0] == false ? \r\n                                 <Image source = {require('../assets/dimmedCloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />\r\n                                    : \r\n                                <Image source = {require('../assets/cloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />}\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress = {() => toggleWater(1)}>\r\n                                 {waterInput[1] == false ? \r\n                                 <Image source = {require('../assets/dimmedCloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />\r\n                                    : \r\n                                <Image source = {require('../assets/cloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />}\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress = {() => toggleWater(2)}>\r\n                                 {waterInput[2] == false ? \r\n                                 <Image source = {require('../assets/dimmedCloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />\r\n                                    : \r\n                                <Image source = {require('../assets/cloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />}\r\n                            </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                \r\n                {/* Date Acquired Container */}\r\n                <View style = {{width:'85%', paddingTop:20, paddingLeft:10}}>\r\n                    <Text style = {{fontSize:16, color:Color.header}}>Date Acquired</Text>\r\n                    <Text \r\n                        style = {{color:Color.darkGreen, zIndex:1}}\r\n                        onPress = {showDatePicker}\r\n                    >Click here to select date</Text>\r\n                    <DateTimePickerModal\r\n                        isVisible={isDatePickerVisible}\r\n                        mode=\"date\"\r\n                        onConfirm={handleConfirm}\r\n                        onCancel={hideDatePicker}\r\n                    />\r\n\r\n                    <Text>{formatDateEntry(selectedDate)}</Text>\r\n                </View>\r\n\r\n                \r\n\r\n                {/* Reminders Container */}\r\n                <View style = {styles.remindersContainer}>\r\n                    <Text style = {{color:Color.header}}><Text style = {{fontSize:16, color:Color.header, fontWeight:'bold'}}>Reminders</Text> (Leave the number blank if not applicable. )</Text>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>watered</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,backgroundColor:'white',paddingLeft:10, marginHorizontal:5}}\r\n                            onChangeText = {(text) => setWateredInput(text)}\r\n                            value = {wateredInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>fertilized</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,backgroundColor:'white',paddingLeft:10, marginHorizontal:5}}\r\n                            onChangeText = {(text) => setFertilizedInput(text)}\r\n                            value = {fertilizedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>rotated</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,backgroundColor:'white',paddingLeft:10, marginHorizontal:5}}\r\n                            onChangeText = {(text) => setRotatedInput(text)}\r\n                            value = {rotatedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>pruned</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,backgroundColor:'white',paddingLeft:10, marginHorizontal:5}}\r\n                            onChangeText = {(text) => setPrunnedInput(text)}\r\n                            value = {prunnedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>trimmed</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,backgroundColor:'white',paddingLeft:10, marginHorizontal:5}}\r\n                            onChangeText = {(text) => setTrimmedInput(text)}\r\n                            value = {trimmedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>replanted</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,backgroundColor:'white',paddingLeft:10, marginHorizontal:5}}\r\n                            onChangeText = {(text) => setReplantedInput(text)}\r\n                            value = {replantedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Additional Notes Container */}\r\n                <View style = {styles.additionalNotesContainer}>\r\n                    <Text style = {{fontSize:16, color:Color.header}}>Additional Notes</Text>\r\n                    <TextInput \r\n                        placeholder = \"Write any additional notes you'd like to keep about your plant here.\"\r\n                        style = {{\r\n                            borderColor:Color.theme,borderWidth:1, backgroundColor: \"white\", borderRadius:5,\r\n                            paddingLeft:10,paddingTop:5,marginTop:5,  textAlignVertical:'top', paddingVertical:Platform.OS === 'ios' ? 5 : 0}}\r\n                        placeholderTextColor = \"black\"\r\n                        numberOfLines = {10}\r\n                        multiline\r\n                        onChangeText = {(text) => setAdditionalNotesInput(text)}\r\n                        value = {additionalNotesInput}\r\n                    />\r\n\r\n                    {/* Buttons */}\r\n                    <View>\r\n                        <View style = {{flexDirection:'row', justifyContent:'space-between', marginTop:10}}>\r\n                            <TouchableOpacity \r\n                                style = {{backgroundColor:Color.theme, flexDirection:'row', borderRadius:5, alignItems:'center', width:150, paddingVertical:5, zIndex:5}}\r\n                                onPress = {() => {submitEntry(); navigation.navigate(\"Home\")}}\r\n                            >\r\n                                <Icon name = 'pencil' type = \"simple-line-icon\" color = \"white\" style = {{paddingLeft:5}}/>\r\n                                <Text style = {{color:'white', paddingLeft:10, fontSize:16}}>Create Entry</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity \r\n                                style = {{backgroundColor:Color.theme, flexDirection:'row', borderRadius:5, alignItems:'center', width:150, zIndex:5}}\r\n                                onPress = {() => navigation.navigate(\"Home\")}\r\n                                \r\n                            >\r\n                                <Icon name ='md-close' type = 'ionicon' color = \"white\" style = {{paddingLeft:10}}/>\r\n                                <Text style = {{paddingLeft:10, color:'white', fontSize:16}}>Cancel</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                <View>\r\n                    <Button title = \"Output\" onPress = {() => console.log(\"selected date is: \", image)} />\r\n                </View>\r\n\r\n            </View>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n\r\n\r\n\r\n    // Display Date Selection\r\n    function formatDateEntry(date)\r\n    {\r\n        let tempDate = date.toString().split(\" \");\r\n        let month = tempDate[1];\r\n        let day = tempDate[2];\r\n        let year = tempDate[3];\r\n\r\n        return `${month} ${day}, ${year}`;\r\n\r\n    }\r\n\r\n    // Convert Date Selection to add to Global on Submit\r\n    function convertedDate(date)\r\n    {\r\n        let originalDate = date.toString();\r\n\r\n        let day;\r\n        let month = -1;\r\n        let year;\r\n\r\n        let dateArray = originalDate.split(\" \");\r\n\r\n        switch(dateArray[1].toLowerCase())\r\n        {\r\n            case 'jan':\r\n                month = 1;\r\n                break;\r\n            case 'feb':\r\n                month = 2;\r\n                break;\r\n\r\n            case 'mar':\r\n                month = 3;\r\n                break;\r\n            \r\n            case 'apr':\r\n                month = 4;\r\n                break;\r\n            case 'may':\r\n                month = 5;\r\n                break;\r\n            case 'jun':\r\n                month = 6;\r\n                break;\r\n            case 'jul':\r\n                month = 7;\r\n                break;\r\n            case 'aug':\r\n                month = 8;\r\n                break;\r\n            case 'sep':\r\n                month = 9;\r\n                break;\r\n            case 'oct':\r\n                month = 10;\r\n                break;\r\n            case 'nov':\r\n                month = 11;\r\n                break;\r\n            case 'dec':\r\n                month = 12;\r\n                break;\r\n        }\r\n\r\n        day = dateArray[2];\r\n        year = dateArray[3];\r\n        console.log(dateArray[1]);\r\n        console.log(month);\r\n\r\n        let completeDate = `${year}-${month}-${day}`;\r\n\r\n        return completeDate;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer:{\r\n        flex:1, \r\n        // borderWidth:5, borderColor:'purple',\r\n        backgroundColor:Color.background,\r\n        alignItems:'center',\r\n        paddingBottom:50\r\n    },\r\n    secondaryContainerHeader:{\r\n        marginTop:Platform.OS === 'ios' ? 0 : 11,\r\n        // borderWidth:5, borderColor:'blue', \r\n        alignItems:'center', \r\n        height:290,\r\n        width:'100%'\r\n      },\r\n    headerContainer:{\r\n        position:'absolute', \r\n        // borderWidth:5, borderColor:'red',\r\n        alignItems:'center',\r\n        justifyContent:'center', \r\n        width:'100%',height:'100%'\r\n    },\r\n    formContainer:{\r\n        // borderWidth:5, borderColor:'teal', \r\n        width:'80%'\r\n    },\r\n    plantClassificationContainer:{\r\n        // borderWidth:5, borderColor:'teal',\r\n         marginTop:10, \r\n        width:'80%'\r\n    },\r\n    weatherContainer:\r\n    {\r\n        paddingTop:20, \r\n        width:'80%',\r\n        // borderWidth:5, borderColor:'red'\r\n    },\r\n    remindersContainer:\r\n    {\r\n        // borderWidth:5, borderColor:'blue'\r\n        marginTop:20\r\n    },\r\n    additionalNotesContainer:\r\n    {\r\n        // borderWidth:5, borderColor:'blue',\r\n        marginTop:20, width:'85%'\r\n\r\n    },\r\n    HeaderText:\r\n    {\r\n        fontSize:25,\r\n        color: Color.header,\r\n        fontWeight:'bold'\r\n    },\r\n    contentText:{\r\n        fontSize:16\r\n    },\r\n    ContentTextHeader:{\r\n        color: Color.header,\r\n        \r\n    }\r\n    \r\n})\r\n\r\n\r\nexport {NewEntry}"]},"metadata":{},"sourceType":"module"}