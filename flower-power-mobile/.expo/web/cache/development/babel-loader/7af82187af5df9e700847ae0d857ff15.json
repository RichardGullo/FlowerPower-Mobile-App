{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repositories\\\\FlowerPower-Mobile-App\\\\flower-power-mobile\\\\components\\\\PlantEntry.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ImagePropTypes } from \"react-native-web/dist/index\";\nimport Color from \"../constants/colors\";\nimport Dash from 'react-native-dash';\nimport { Icon } from 'react-native-elements';\nimport { CheckBox } from 'react-native-elements';\nimport { RoundButton } from \"./RoundButton\";\nimport { useNavigation } from '@react-navigation/native';\n\nfunction PlantEntry(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggleCheckBox = _useState2[0],\n      setToggleCheckBox = _useState2[1];\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(Dash, {\n    style: {\n      width: '100%',\n      height: 1\n    },\n    dashLength: 7,\n    dashThickness: 1,\n    dashColor: Color.HeaderText,\n    dashGap: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.PlantRemindersContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.image\n    },\n    style: {\n      borderRadius: 5,\n      resizeMode: 'stretch',\n      height: 64,\n      width: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.plantDataContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.plantInfoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.darkGreen\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 35\n    }\n  }, \"Nickname:\"), \" \", props.nickname), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.darkGreen\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 35\n    }\n  }, \"Species:\"), \" \", props.species), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.darkGreen\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }\n  }, \"Date Acquired: \"), props.date), React.createElement(Text, {\n    style: {\n      color: Color.darkGreen\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, \"Plant Classification: \"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, props.classification.map(function (name) {\n    return React.createElement(RoundButton, {\n      key: name,\n      name: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 69\n      }\n    });\n  }))), React.createElement(View, {\n    style: styles.EntryContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, React.createElement(CheckBox, {\n    checked: toggleCheckBox,\n    onPress: function onPress() {\n      props.onToggleDelete(props.id, !toggleCheckBox);\n      setToggleCheckBox(!toggleCheckBox);\n      {}\n    },\n    containerStyle: {\n      color: 'green',\n      padding: 0\n    },\n    checkedColor: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, \"Delete Entry\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      paddingRight: 5,\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, \"View Entry\"), React.createElement(Icon, {\n    name: \"long-arrow-right\",\n    type: \"font-awesome\",\n    color: Color.header,\n    onPress: function onPress() {\n      navigation.navigate('ViewEntrySearch', {\n        itemId: props.id\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  })))))), React.createElement(Dash, {\n    style: {\n      width: '100%',\n      height: 1\n    },\n    dashLength: 7,\n    dashThickness: 1,\n    dashColor: Color.HeaderText,\n    dashGap: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  mainContainer: {},\n  PlantRemindersContainer: {\n    paddingVertical: 15,\n    paddingLeft: 7\n  },\n  plantDataContainer: {\n    flex: 1,\n    paddingLeft: 5\n  },\n  plantInfoContainer: {},\n  EntryContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n});\nexport { PlantEntry };","map":{"version":3,"sources":["D:/Repositories/FlowerPower-Mobile-App/flower-power-mobile/components/PlantEntry.js"],"names":["React","useState","ImagePropTypes","Color","Dash","Icon","CheckBox","RoundButton","useNavigation","PlantEntry","props","toggleCheckBox","setToggleCheckBox","navigation","styles","mainContainer","width","height","HeaderText","PlantRemindersContainer","flexDirection","uri","image","borderRadius","resizeMode","plantDataContainer","plantInfoContainer","color","darkGreen","nickname","species","date","classification","map","name","EntryContainer","alignItems","paddingTop","onToggleDelete","id","padding","paddingRight","header","navigate","itemId","StyleSheet","create","paddingVertical","paddingLeft","flex","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Text, View, Button, StyleSheet,StatusBar, Image, ImagePropTypes} from 'react-native'\r\nimport Color from '../constants/colors';\r\nimport Dash from 'react-native-dash';\r\nimport { Icon } from 'react-native-elements'\r\nimport { CheckBox } from 'react-native-elements'\r\nimport {RoundButton} from './RoundButton'\r\nimport {useNavigation} from '@react-navigation/native';\r\n\r\nfunction PlantEntry(props)\r\n{\r\n    const [toggleCheckBox, setToggleCheckBox] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    return(\r\n\r\n        // Main Container - Purple\r\n        <View style = {styles.mainContainer}>\r\n            <Dash style = {{width:'100%',height:1}} dashLength = {7}  dashThickness = {1} dashColor = {Color.HeaderText} dashGap = {5}/>\r\n\r\n            {/* Plant Reminder Container - Blue*/}\r\n            <View style = {styles.PlantRemindersContainer}>\r\n                <View style = {{flexDirection:'row'}}>\r\n                    <Image source = {{uri:props.image}} style = {{borderRadius:5, resizeMode:'stretch', height:64, width:64}}/>\r\n\r\n                    {/* Plant Data Container - DodgerBlue */}\r\n                    <View style = {styles.plantDataContainer}>\r\n\r\n                        {/* Plant Info Container Orange */}\r\n                        <View style = {styles.plantInfoContainer}>\r\n                            <Text><Text style = {{color:Color.darkGreen}}>Nickname:</Text> {props.nickname}</Text>\r\n                            <Text><Text style = {{color:Color.darkGreen}}>Species:</Text> {props.species}</Text>\r\n                            <Text><Text style = {{color:Color.darkGreen}}>Date Acquired: </Text>{props.date}</Text>\r\n                            <Text style = {{color:Color.darkGreen}}>Plant Classification: </Text>\r\n                            <View style = {{flexDirection:'row'}}>\r\n                                {props.classification.map((name) => <RoundButton key = {name} name = {name} />)}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Entry Container - Green */}\r\n                        <View style = {styles.EntryContainer}>\r\n                            {/* Delete Entry */}\r\n                            <View style = {{flexDirection:'row', alignItems:'center', paddingTop:10}}>\r\n                                <CheckBox\r\n                                    checked = {toggleCheckBox}\r\n                                    onPress = {() => {props.onToggleDelete(props.id, !toggleCheckBox); setToggleCheckBox(!toggleCheckBox); {/*props.onModal(props.id)*/}}}\r\n                                    containerStyle = {{color:'green', padding:0}}\r\n                                    checkedColor = \"green\"\r\n                                />\r\n                                <Text>Delete Entry</Text>\r\n                            </View>\r\n                            \r\n                            {/* View Entry */}\r\n                            <View style = {{flexDirection:'row', paddingRight:5, alignItems:'center'}}>\r\n                                <Text style = {{paddingRight:5}}>View Entry</Text>\r\n                                <Icon \r\n                                    name = 'long-arrow-right' \r\n                                    type = 'font-awesome' \r\n                                    color = {Color.header} \r\n                                    onPress={() => {\r\n                                        /* 1. Navigate to the Details route with params */\r\n                                        navigation.navigate('ViewEntrySearch', {\r\n                                          itemId: props.id,\r\n                                        });\r\n                                      }}\r\n                                    \r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            \r\n            <Dash style = {{width:'100%',height:1}} dashLength = {7}  dashThickness = {1} dashColor = {Color.HeaderText} dashGap = {5}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer:{\r\n        // borderWidth:5, borderColor:'purple'\r\n    },\r\n    PlantRemindersContainer:{\r\n        // borderWidth:5, borderColor:'blue',\r\n        paddingVertical:15, paddingLeft:7\r\n    },\r\n    plantDataContainer:{\r\n        // borderWidth:5, borderColor:'dodgerblue',\r\n        flex:1, \r\n        paddingLeft:5\r\n    },\r\n    plantInfoContainer:{\r\n        // borderWidth:5, borderColor:'orange'\r\n    },\r\n    EntryContainer:{\r\n        flexDirection:'row', \r\n        justifyContent:'space-between',alignItems:'center', \r\n        // borderWidth:5, borderColor:'green'\r\n    }\r\n})\r\n\r\nexport {PlantEntry}"]},"metadata":{},"sourceType":"module"}