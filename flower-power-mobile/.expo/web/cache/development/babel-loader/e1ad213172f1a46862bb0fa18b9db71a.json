{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repositories\\\\FlowerPower-Mobile-App\\\\flower-power-mobile\\\\Screens\\\\ModifyEntrySearch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Color from \"../constants/colors\";\nimport { Header } from \"../components/Header\";\nimport { Input } from 'react-native-elements';\nimport { RoundButton } from \"../components/RoundButton\";\nimport { RoundButtonLarge } from \"../components/RoundButtonLarge\";\nimport { Icon } from 'react-native-elements';\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport * as ImagePicker from 'expo-image-picker';\n\nfunction ModifyEntrySearch(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var itemId = route.params.itemId;\n  console.log(itemId);\n\n  var _useContext = useContext(GlobalContext),\n      plantEntriesContext = _useContext.plantEntriesContext;\n\n  var _plantEntriesContext = _slicedToArray(plantEntriesContext, 2),\n      plantEntries = _plantEntriesContext[0],\n      setPlantEntries = _plantEntriesContext[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggleSubmit = _useState2[0],\n      setToggleSubmit = _useState2[1];\n\n  var index = findEntryIndex(itemId);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDatePickerVisible = _useState4[0],\n      setDatePickerVisibility = _useState4[1];\n\n  var _useState5 = useState(new Date()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedDate = _useState6[0],\n      setSelectedDate = _useState6[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    hideDatePicker();\n    setSelectedDate(date);\n  };\n\n  React.useEffect(function () {}, [selectedDate]);\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      image = _useState8[0],\n      setImage = _useState8[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      buttonSet = _useState10[0],\n      setButtonSet = _useState10[1];\n\n  useEffect(function () {\n    var tempSunlight = [false, false, false];\n    var tempWater = [false, false, false];\n\n    for (var i = 0; i < plantEntries[index].sunlight; i++) {\n      tempSunlight[i] = true;\n    }\n\n    for (var _i = 0; _i < plantEntries[index].water; _i++) {\n      tempWater[_i] = true;\n    }\n\n    setSunInput([].concat(tempSunlight));\n    setWaterInput([].concat(tempWater));\n    initialbuttonSet(index);\n  }, []);\n\n  function confirmEntry() {\n    var tempArray = _toConsumableArray(plantEntries);\n\n    var tempButtonArray = [];\n    var sunlight = 0;\n    var water = 0;\n\n    for (var i = 0; i < 3; i++) {\n      if (sunInput[i] == true) sunlight++;\n      if (waterInput[i] == true) water++;\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(buttonSet), _step; !(_step = _iterator()).done;) {\n      var button = _step.value;\n      tempButtonArray.push(button.name);\n    }\n\n    var myTempArray = {\n      key: tempArray[index].key,\n      nickname: nicknameInput,\n      species: speciesInput,\n      date: convertedDate(selectedDate),\n      classification: [].concat(tempButtonArray),\n      image: image,\n      reminders: {\n        watered: wateredInput,\n        fertilized: fertilizedInput,\n        rotated: rotatedInput,\n        prunned: prunnedInput,\n        trimmed: trimmedInput,\n        replanted: replantedInput\n      },\n      water: water,\n      sunlight: sunlight,\n      notes: additionalNotesInput,\n      completedTask: [plantEntries[index].completedTask[0], plantEntries[index].completedTask[1]],\n      deleteEntry: plantEntries[index].deleteEntry\n    };\n    tempArray[index] = myTempArray;\n    setPlantEntries(_toConsumableArray(tempArray));\n    setToggleSubmit(true);\n  }\n\n  var _useState11 = useState([{\n    id: 0,\n    name: \"Algae\",\n    backgroundColor: Color.theme\n  }, {\n    id: 1,\n    name: \"Flower\",\n    backgroundColor: Color.theme\n  }, {\n    id: 2,\n    name: \"Fruit\",\n    backgroundColor: Color.theme\n  }, {\n    id: 3,\n    name: \"Grass\",\n    backgroundColor: Color.theme\n  }, {\n    id: 4,\n    name: \"Herb\",\n    backgroundColor: Color.theme\n  }, {\n    id: 5,\n    name: \"Moss\",\n    backgroundColor: Color.theme\n  }, {\n    id: 6,\n    name: \"Orchid\",\n    backgroundColor: Color.theme\n  }, {\n    id: 7,\n    name: \"Root\",\n    backgroundColor: Color.theme\n  }, {\n    id: 8,\n    name: \"Shrub\",\n    backgroundColor: Color.theme\n  }, {\n    id: 9,\n    name: \"Succulent\",\n    backgroundColor: Color.theme\n  }, {\n    id: 10,\n    name: \"Tree\",\n    backgroundColor: Color.theme\n  }, {\n    id: 11,\n    name: \"Veggie\",\n    backgroundColor: Color.theme\n  }, {\n    id: 12,\n    name: \"Vine\",\n    backgroundColor: Color.theme\n  }, {\n    id: 13,\n    name: \"Other\",\n    backgroundColor: Color.theme\n  }]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      roundButtons = _useState12[0],\n      setRoundButtons = _useState12[1];\n\n  var _useState13 = useState(plantEntries[index].nickname),\n      _useState14 = _slicedToArray(_useState13, 2),\n      nicknameInput = _useState14[0],\n      setNicknameInput = _useState14[1];\n\n  var _useState15 = useState(plantEntries[index].species),\n      _useState16 = _slicedToArray(_useState15, 2),\n      speciesInput = _useState16[0],\n      setSpeciesInput = _useState16[1];\n\n  var _useState17 = useState(plantEntries[index].reminders.watered.toString()),\n      _useState18 = _slicedToArray(_useState17, 2),\n      wateredInput = _useState18[0],\n      setWateredInput = _useState18[1];\n\n  var _useState19 = useState(plantEntries[index].reminders.fertilized.toString()),\n      _useState20 = _slicedToArray(_useState19, 2),\n      fertilizedInput = _useState20[0],\n      setFertilizedInput = _useState20[1];\n\n  var _useState21 = useState(plantEntries[index].reminders.rotated.toString()),\n      _useState22 = _slicedToArray(_useState21, 2),\n      rotatedInput = _useState22[0],\n      setRotatedInput = _useState22[1];\n\n  var _useState23 = useState(plantEntries[index].reminders.prunned.toString()),\n      _useState24 = _slicedToArray(_useState23, 2),\n      prunnedInput = _useState24[0],\n      setPrunnedInput = _useState24[1];\n\n  var _useState25 = useState(plantEntries[index].reminders.trimmed.toString()),\n      _useState26 = _slicedToArray(_useState25, 2),\n      trimmedInput = _useState26[0],\n      setTrimmedInput = _useState26[1];\n\n  var _useState27 = useState(plantEntries[index].reminders.replanted.toString()),\n      _useState28 = _slicedToArray(_useState27, 2),\n      replantedInput = _useState28[0],\n      setReplantedInput = _useState28[1];\n\n  var _useState29 = useState(plantEntries[index].notes.toString()),\n      _useState30 = _slicedToArray(_useState29, 2),\n      additionalNotesInput = _useState30[0],\n      setAdditionalNotesInput = _useState30[1];\n\n  var _useState31 = useState([false, false, false]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      sunInput = _useState32[0],\n      setSunInput = _useState32[1];\n\n  var _useState33 = useState([false, false, false]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      waterInput = _useState34[0],\n      setWaterInput = _useState34[1];\n\n  useEffect(function () {\n    initialbuttonSet(index);\n  }, []);\n  console.log(buttonSet.length);\n\n  function toggleSun(index) {\n    var tempObject = _toConsumableArray(sunInput);\n\n    if (tempObject[index]) tempObject[index] = false;else tempObject[index] = true;\n    setSunInput(_toConsumableArray(tempObject));\n  }\n\n  function toggleWater(index) {\n    var tempObject = _toConsumableArray(waterInput);\n\n    if (tempObject[index]) tempObject[index] = false;else tempObject[index] = true;\n    setWaterInput(_toConsumableArray(tempObject));\n  }\n\n  function toggleButton(id) {\n    var tempArray = _toConsumableArray(roundButtons);\n\n    var tempButtonSet = _toConsumableArray(buttonSet);\n\n    var tempButton = _objectSpread({}, roundButtons[id]);\n\n    if (tempArray[id].backgroundColor == Color.theme) {\n      if (tempButtonSet.length == 3) {\n        var poppedId = tempButtonSet[2].id;\n        tempButtonSet.pop();\n        tempArray[poppedId].backgroundColor = Color.theme;\n        tempArray[id].backgroundColor = Color.darkGreen;\n        tempButtonSet.push(tempArray[id]);\n        setButtonSet(_toConsumableArray(tempButtonSet));\n        setRoundButtons(_toConsumableArray(tempArray));\n      } else {\n        tempArray[id].backgroundColor = Color.darkGreen;\n        tempButtonSet.push(tempArray[id]);\n        setButtonSet(function (currentButtons) {\n          return [].concat(_toConsumableArray(currentButtons), [tempButton]);\n        });\n        setRoundButtons(_toConsumableArray(tempArray));\n      }\n    } else {\n      tempArray[id].backgroundColor = Color.theme;\n      tempButtonSet = tempButtonSet.filter(function (name) {\n        return name.id != id;\n      });\n      setButtonSet(_toConsumableArray(tempButtonSet));\n      setRoundButtons(_toConsumableArray(tempArray));\n    }\n  }\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, React.createElement(StatusBar, {\n    barstyle: \"dark-content\",\n    hidden: false,\n    backgroundColor: Color.theme,\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.secondaryContainerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/header.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, image ? React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 150,\n      height: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 38\n    }\n  }) : React.createElement(Image, {\n    source: {\n      uri: plantEntries[index].image\n    },\n    style: {\n      resizeMode: 'stretch',\n      height: 200,\n      width: 200,\n      borderRadius: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }))))), React.createElement(View, {\n    style: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: '#816868'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, \"Plant Nickname\"), React.createElement(TextInput, {\n    placeholder: \"Plant nickname\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      width: '100%',\n      paddingLeft: 10,\n      paddingVertical: Platform.OS === 'ios' ? 5 : 0\n    },\n    placeholderTextColor: \"black\",\n    onChangeText: function onChangeText(text) {\n      setNicknameInput(text);\n      console.log(text);\n    },\n    value: nicknameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: '#816868'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 29\n    }\n  }, \"Plant Species\"), React.createElement(TextInput, {\n    placeholder: \"Plant Species\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      width: '100%',\n      paddingLeft: 10,\n      paddingVertical: Platform.OS === 'ios' ? 5 : 0\n    },\n    placeholderTextColor: \"black\",\n    onChangeText: function onChangeText(text) {\n      return setSpeciesInput(text);\n    },\n    value: speciesInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 29\n    }\n  })))), React.createElement(View, {\n    style: styles.plantClassificationContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: '#816868'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, \"Plant Classification (Select up to 3)\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, React.createElement(RoundButtonLarge, {\n    name: roundButtons[0].name,\n    highlightColor: roundButtons[0].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[0].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[1].name,\n    highlightColor: roundButtons[1].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[1].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[2].name,\n    highlightColor: roundButtons[2].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[2].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[3].name,\n    highlightColor: roundButtons[3].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[3].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[4].name,\n    highlightColor: roundButtons[4].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[4].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[5].name,\n    highlightColor: roundButtons[5].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[5].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[6].name,\n    highlightColor: roundButtons[6].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[6].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[7].name,\n    highlightColor: roundButtons[7].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[7].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[8].name,\n    highlightColor: roundButtons[8].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[8].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[9].name,\n    highlightColor: roundButtons[9].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[9].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[10].name,\n    highlightColor: roundButtons[10].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[10].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 25\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[11].name,\n    highlightColor: roundButtons[11].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[11].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '66%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 25\n    }\n  }, React.createElement(RoundButtonLarge, {\n    name: roundButtons[12].name,\n    highlightColor: roundButtons[12].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[12].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 29\n    }\n  }), React.createElement(RoundButtonLarge, {\n    name: roundButtons[13].name,\n    highlightColor: roundButtons[13].backgroundColor,\n    onToggle: toggleButton.bind(this, roundButtons[13].id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  })))), React.createElement(View, {\n    style: styles.weatherContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 29\n    }\n  }, \"Sunlight Needed: \"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleSun(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 33\n    }\n  }, sunInput[0] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedSun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 37\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 37\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleSun(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 33\n    }\n  }, sunInput[1] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedSun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 37\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 37\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleSun(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 33\n    }\n  }, sunInput[2] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedSun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 37\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 37\n    }\n  })))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }, \"Water Needed:\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleWater(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 29\n    }\n  }, waterInput[0] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedCloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 34\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/cloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 33\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleWater(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 29\n    }\n  }, waterInput[1] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedCloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 34\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/cloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 33\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleWater(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 29\n    }\n  }, waterInput[2] == false ? React.createElement(Image, {\n    source: require(\"../assets/dimmedCloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 34\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/cloud.png\"),\n    resizeMode: \"cover\",\n    style: {\n      width: 30,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  })))))), React.createElement(View, {\n    style: {\n      width: '85%',\n      paddingTop: 20,\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 21\n    }\n  }, \"Current Date Acquired\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 21\n    }\n  }, formatDate(plantEntries[index].date))), React.createElement(View, {\n    style: {\n      width: '85%',\n      paddingTop: 20,\n      paddingLeft: 10,\n      alignItems: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 21\n    }\n  }, \"New Date Selection\"), React.createElement(Text, {\n    style: {\n      color: Color.darkGreen,\n      zIndex: 1\n    },\n    onPress: showDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 21\n    }\n  }, \"Click here to select date\"), React.createElement(DateTimePickerModal, {\n    isVisible: isDatePickerVisible,\n    mode: \"date\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  }, formatDateEntry(selectedDate))), React.createElement(View, {\n    style: styles.remindersContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: Color.header,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 58\n    }\n  }, \"Reminders\"), \" (Leave the number blank if not applicable. )\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 85\n    }\n  }, \"watered\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      paddingHorizontal: Platform.OS === 'ios' ? 10 : 0,\n      paddingLeft: Platform.OS === 'ios' ? 10 : 10\n    },\n    onChangeText: function onChangeText(text) {\n      return setWateredInput(text);\n    },\n    value: wateredInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 85\n    }\n  }, \"fertilized\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      paddingHorizontal: Platform.OS === 'ios' ? 10 : 0,\n      paddingLeft: Platform.OS === 'ios' ? 10 : 10\n    },\n    onChangeText: function onChangeText(text) {\n      return setFertilizedInput(text);\n    },\n    value: fertilizedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 85\n    }\n  }, \"rotated\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      paddingHorizontal: Platform.OS === 'ios' ? 10 : 0,\n      paddingLeft: Platform.OS === 'ios' ? 10 : 10\n    },\n    onChangeText: function onChangeText(text) {\n      return setRotatedInput(text);\n    },\n    value: rotatedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 85\n    }\n  }, \"pruned\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      paddingHorizontal: Platform.OS === 'ios' ? 10 : 0,\n      paddingLeft: Platform.OS === 'ios' ? 10 : 10\n    },\n    onChangeText: function onChangeText(text) {\n      return setPrunnedInput(text);\n    },\n    value: prunnedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 85\n    }\n  }, \"trimmed\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      paddingHorizontal: Platform.OS === 'ios' ? 10 : 0,\n      paddingLeft: Platform.OS === 'ios' ? 10 : 10\n    },\n    onChangeText: function onChangeText(text) {\n      return setTrimmedInput(text);\n    },\n    value: trimmedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 25\n    }\n  }, \"days\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 25\n    }\n  }, \"This plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 85\n    }\n  }, \"replanted\"), \" every \"), React.createElement(TextInput, {\n    placeholder: \"##\",\n    style: {\n      borderColor: '#a5dfb2',\n      borderWidth: 2,\n      borderRadius: 5,\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      paddingHorizontal: Platform.OS === 'ios' ? 10 : 0,\n      paddingLeft: Platform.OS === 'ios' ? 10 : 10\n    },\n    onChangeText: function onChangeText(text) {\n      return setReplantedInput(text);\n    },\n    value: replantedInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 25\n    }\n  }, \"days\"))), React.createElement(View, {\n    style: styles.additionalNotesContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: Color.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 21\n    }\n  }, \"Additional Notes\"), React.createElement(TextInput, {\n    placeholder: \"Write any additional notes you'd like to keep about your plant here.\",\n    style: {\n      borderColor: 'black',\n      borderWidth: 1,\n      backgroundColor: \"white\",\n      borderRadius: 5,\n      paddingLeft: 10,\n      paddingTop: 5,\n      marginTop: 5,\n      borderColor: Color.theme,\n      textAlignVertical: 'top',\n      paddingVertical: Platform.OS ? 5 : 0\n    },\n    placeholderTextColor: \"black\",\n    numberOfLines: 10,\n    multiline: true,\n    onChangeText: function onChangeText(text) {\n      return setAdditionalNotesInput(text);\n    },\n    value: additionalNotesInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: Color.theme,\n      flexDirection: 'row',\n      borderRadius: 5,\n      alignItems: 'center',\n      width: 150,\n      paddingVertical: 5\n    },\n    onPress: function onPress() {\n      confirmEntry();\n      navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 29\n    }\n  }, React.createElement(Icon, {\n    name: \"pencil\",\n    type: \"simple-line-icon\",\n    color: \"white\",\n    style: {\n      paddingLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      paddingLeft: 10,\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 33\n    }\n  }, \"Confirm Edit\")), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: Color.theme,\n      flexDirection: 'row',\n      borderRadius: 5,\n      alignItems: 'center',\n      width: 150\n    },\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 29\n    }\n  }, React.createElement(Icon, {\n    name: \"md-close\",\n    type: \"ionicon\",\n    color: \"white\",\n    style: {\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: {\n      paddingLeft: 10,\n      color: 'white',\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 33\n    }\n  }, \"Cancel\")))))));\n\n  function findEntryIndex(id) {\n    for (var i = 0; i < plantEntries.length; i++) {\n      if (plantEntries[i].key == id) return i;\n    }\n\n    return -1;\n  }\n\n  function initialbuttonSet(index) {\n    var tempButtonSet = [];\n\n    var tempRoundButtonSet = _toConsumableArray(roundButtons);\n\n    for (var i = 0; i < plantEntries[index].classification.length; i++) {\n      for (var j = 0; j < roundButtons.length; j++) {\n        if (plantEntries[index].classification[i].toLowerCase() == roundButtons[j].name.toLowerCase()) {\n          tempButtonSet.push(roundButtons[j]);\n          tempRoundButtonSet[j].backgroundColor = Color.darkGreen;\n          break;\n        }\n      }\n    }\n\n    setButtonSet([].concat(tempButtonSet));\n  }\n\n  function formatDate(date) {\n    var originalDate = date;\n    var day;\n    var month = -1;\n    var year;\n    var dateArray = originalDate.split(\"-\");\n\n    switch (dateArray[1].toLowerCase()) {\n      case \"1\":\n        month = 'January';\n        break;\n\n      case \"2\":\n        month = 'February';\n        break;\n\n      case \"3\":\n        month = \"March\";\n        break;\n\n      case \"4\":\n        month = \"April\";\n        break;\n\n      case \"5\":\n        month = \"May\";\n        break;\n\n      case \"6\":\n        month = \"June\";\n        break;\n\n      case \"7\":\n        month = \"July\";\n        break;\n\n      case \"8\":\n        month = \"August\";\n        break;\n\n      case \"9\":\n        month = \"September\";\n        break;\n\n      case \"10\":\n        month = \"October\";\n        break;\n\n      case \"11\":\n        month = \"November\";\n        break;\n\n      case \"12\":\n        month = \"December\";\n        break;\n    }\n\n    day = dateArray[2];\n    year = dateArray[0];\n    console.log(dateArray[1]);\n    console.log(month);\n    var completeDate = month + \" \" + day + \", \" + year;\n    return completeDate;\n  }\n\n  function formatDateEntry(date) {\n    var tempDate = date.toString().split(\" \");\n    var month = tempDate[1];\n    var day = tempDate[2];\n    var year = tempDate[3];\n    return month + \" \" + day + \", \" + year;\n  }\n\n  function convertedDate(date) {\n    var originalDate = date.toString();\n    var day;\n    var month = -1;\n    var year;\n    var dateArray = originalDate.split(\" \");\n\n    switch (dateArray[1].toLowerCase()) {\n      case 'jan':\n        month = 1;\n        break;\n\n      case 'feb':\n        month = 2;\n        break;\n\n      case 'mar':\n        month = 3;\n        break;\n\n      case 'apr':\n        month = 4;\n        break;\n\n      case 'may':\n        month = 5;\n        break;\n\n      case 'jun':\n        month = 6;\n        break;\n\n      case 'jul':\n        month = 7;\n        break;\n\n      case 'aug':\n        month = 8;\n        break;\n\n      case 'sep':\n        month = 9;\n        break;\n\n      case 'oct':\n        month = 10;\n        break;\n\n      case 'nov':\n        month = 11;\n        break;\n\n      case 'dec':\n        month = 12;\n        break;\n    }\n\n    day = dateArray[2];\n    year = dateArray[3];\n    console.log(dateArray[1]);\n    console.log(month);\n    var completeDate = year + \"-\" + month + \"-\" + day;\n    return completeDate;\n  }\n}\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: Color.background,\n    alignItems: 'center',\n    paddingBottom: 50\n  },\n  secondaryContainerHeader: {\n    marginTop: Platform.OS === 'ios' ? 0 : 11,\n    alignItems: 'center',\n    height: 290,\n    width: '100%'\n  },\n  headerContainer: {\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%'\n  },\n  formContainer: {\n    width: '80%'\n  },\n  plantClassificationContainer: {\n    marginTop: 10,\n    width: '80%'\n  },\n  weatherContainer: {\n    paddingTop: 20,\n    width: '80%'\n  },\n  remindersContainer: {\n    marginTop: 20\n  },\n  additionalNotesContainer: {\n    marginTop: 20,\n    width: '85%'\n  },\n  HeaderText: {\n    fontSize: 25,\n    color: Color.header,\n    fontWeight: 'bold'\n  },\n  contentText: {\n    fontSize: 16\n  },\n  ContentTextHeader: {\n    color: Color.header\n  }\n});\nexport { ModifyEntrySearch };","map":{"version":3,"sources":["D:/Repositories/FlowerPower-Mobile-App/flower-power-mobile/Screens/ModifyEntrySearch.js"],"names":["React","useContext","useEffect","useState","Color","Header","Input","RoundButton","RoundButtonLarge","Icon","GlobalContext","DateTimePickerModal","ImagePicker","ModifyEntrySearch","navigation","route","itemId","params","console","log","plantEntriesContext","plantEntries","setPlantEntries","toggleSubmit","setToggleSubmit","index","findEntryIndex","isDatePickerVisible","setDatePickerVisibility","Date","selectedDate","setSelectedDate","showDatePicker","hideDatePicker","handleConfirm","date","image","setImage","Platform","OS","requestCameraRollPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","buttonSet","setButtonSet","tempSunlight","tempWater","i","sunlight","water","setSunInput","setWaterInput","initialbuttonSet","confirmEntry","tempArray","tempButtonArray","sunInput","waterInput","button","push","name","myTempArray","key","nickname","nicknameInput","species","speciesInput","convertedDate","classification","reminders","watered","wateredInput","fertilized","fertilizedInput","rotated","rotatedInput","prunned","prunnedInput","trimmed","trimmedInput","replanted","replantedInput","notes","additionalNotesInput","completedTask","deleteEntry","id","backgroundColor","theme","roundButtons","setRoundButtons","setNicknameInput","setSpeciesInput","toString","setWateredInput","setFertilizedInput","setRotatedInput","setPrunnedInput","setTrimmedInput","setReplantedInput","setAdditionalNotesInput","length","toggleSun","tempObject","toggleWater","toggleButton","tempButtonSet","tempButton","poppedId","pop","darkGreen","currentButtons","filter","flexGrow","styles","mainContainer","secondaryContainerHeader","require","headerContainer","justifyContent","alignItems","width","height","resizeMode","borderRadius","formContainer","marginBottom","fontSize","color","borderColor","borderWidth","paddingLeft","paddingVertical","text","plantClassificationContainer","flexDirection","flexWrap","bind","weatherContainer","contentText","ContentTextHeader","paddingTop","header","formatDate","zIndex","formatDateEntry","remindersContainer","fontWeight","marginHorizontal","paddingHorizontal","additionalNotesContainer","marginTop","textAlignVertical","goBack","tempRoundButtonSet","j","toLowerCase","originalDate","day","month","year","dateArray","split","completeDate","tempDate","StyleSheet","create","flex","background","paddingBottom","position","HeaderText"],"mappings":"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","sourcesContent":["import React,{useContext, useEffect, useState} from 'react'\r\nimport {Text, View, Button, StyleSheet, TextInput,Image,StatusBar, TouchableOpacity, ImageBackground, ScrollView} from 'react-native'\r\nimport Color from '../constants/colors';\r\nimport {Header} from '../components/Header'\r\nimport { Input } from 'react-native-elements';\r\nimport {RoundButton} from '../components/RoundButton'\r\nimport { RoundButtonLarge } from '../components/RoundButtonLarge';\r\nimport {Icon} from 'react-native-elements'\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nfunction ModifyEntrySearch({navigation, route})\r\n{\r\n    const {itemId} = route.params;\r\n\r\n    console.log(itemId);\r\n\r\n    const {plantEntriesContext} = useContext(GlobalContext) \r\n\r\n    const[plantEntries, setPlantEntries] = plantEntriesContext;\r\n    \r\n    const[toggleSubmit, setToggleSubmit] = useState(false);\r\n\r\n    let index = findEntryIndex(itemId);\r\n\r\n     // ---- Date Variables\r\n     const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n     const [selectedDate, setSelectedDate] = useState(new Date());\r\n \r\n     const showDatePicker = () => {\r\n       setDatePickerVisibility(true);\r\n     };\r\n   \r\n     const hideDatePicker = () => {\r\n       setDatePickerVisibility(false);\r\n     };\r\n   \r\n     const handleConfirm = (date) => {\r\n       // console.warn(\"A date has been picked: \", date);\r\n       hideDatePicker();\r\n       setSelectedDate(date);\r\n     };\r\n \r\n     // Execute after plant entries update and delete has been pressed\r\n     React.useEffect(() =>{\r\n \r\n         \r\n \r\n     },[selectedDate])\r\n \r\n     // -- End Date Variables\r\n\r\n\r\n             // Image Picker \r\n             const [image, setImage] = useState(null);\r\n\r\n             useEffect(() => {\r\n                 (async () => {\r\n                 if (Platform.OS !== 'web') {\r\n                     const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\r\n                     if (status !== 'granted') {\r\n                     alert('Sorry, we need camera roll permissions to make this work!');\r\n                     }\r\n                 }\r\n                 })();\r\n             }, []);\r\n         \r\n             const pickImage = async () => {\r\n                 let result = await ImagePicker.launchImageLibraryAsync({\r\n                 mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n                 allowsEditing: true,\r\n                 aspect: [4, 3],\r\n                 quality: 1,\r\n                 });\r\n         \r\n                 console.log(result);\r\n         \r\n                 if (!result.cancelled) {\r\n                 setImage(result.uri);\r\n                 }\r\n             };\r\n         \r\n             // End Image Picker\r\n\r\n    const[buttonSet,setButtonSet] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        let tempSunlight = [false,false,false];\r\n        let tempWater = [false,false,false];\r\n\r\n      for(let i = 0; i < plantEntries[index].sunlight; i++)\r\n      {\r\n            tempSunlight[i] = true;\r\n      }\r\n\r\n      for(let i = 0; i < plantEntries[index].water; i++)\r\n      {\r\n        tempWater[i] = true;\r\n      }\r\n\r\n      setSunInput([...tempSunlight]);\r\n      setWaterInput([...tempWater]);\r\n\r\n        \r\n        initialbuttonSet(index);\r\n    }, []) // <-- empty dependency array\r\n\r\n    // Function when the user Clicks Confirm Edit\r\n    function confirmEntry()\r\n    {\r\n        let tempArray = [...plantEntries];\r\n        let tempButtonArray = [];\r\n\r\n        let sunlight = 0;\r\n        let water = 0;\r\n\r\n        for(let i = 0; i < 3; i++)\r\n        {\r\n            if(sunInput[i] == true)\r\n                sunlight++;\r\n            \r\n            if(waterInput[i] == true)\r\n                water++;\r\n        }\r\n\r\n\r\n        for(let button of buttonSet)\r\n        {\r\n            tempButtonArray.push(button.name);\r\n        }\r\n\r\n    \r\n        let myTempArray = {\r\n            key:tempArray[index].key,\r\n            nickname:nicknameInput,\r\n            species:speciesInput,\r\n            date:convertedDate(selectedDate),\r\n            classification:[...tempButtonArray],\r\n            image: image,\r\n            reminders:{\r\n                watered:wateredInput,\r\n                fertilized:fertilizedInput,\r\n                rotated:rotatedInput,\r\n                prunned:prunnedInput,\r\n                trimmed:trimmedInput,\r\n                replanted:replantedInput,\r\n            },\r\n            water:water,\r\n            sunlight:sunlight,\r\n  \r\n            notes:additionalNotesInput,\r\n            completedTask:[plantEntries[index].completedTask[0],plantEntries[index].completedTask[1]],\r\n            deleteEntry:plantEntries[index].deleteEntry\r\n        };\r\n\r\n        tempArray[index] = myTempArray;\r\n\r\n        setPlantEntries([...tempArray])\r\n\r\n        setToggleSubmit(true);\r\n    }\r\n\r\n\r\n    const[roundButtons, setRoundButtons] = useState([\r\n        {id:0,name: \"Algae\", backgroundColor:Color.theme},\r\n        {id:1,name: \"Flower\", backgroundColor:Color.theme},\r\n        {id:2,name: \"Fruit\", backgroundColor:Color.theme},\r\n        {id:3,name: \"Grass\", backgroundColor:Color.theme},\r\n        {id:4,name: \"Herb\", backgroundColor:Color.theme},\r\n        {id:5,name: \"Moss\", backgroundColor:Color.theme},\r\n        {id:6,name: \"Orchid\", backgroundColor:Color.theme},\r\n        {id:7,name: \"Root\", backgroundColor:Color.theme},\r\n        {id:8,name: \"Shrub\", backgroundColor:Color.theme},\r\n        {id:9,name: \"Succulent\", backgroundColor:Color.theme},\r\n        {id:10,name: \"Tree\", backgroundColor:Color.theme},\r\n        {id:11,name: \"Veggie\", backgroundColor:Color.theme},\r\n        {id:12,name: \"Vine\", backgroundColor:Color.theme},\r\n        {id:13,name: \"Other\", backgroundColor:Color.theme},\r\n\r\n    ]);\r\n\r\n\r\n    // Inputs\r\n    const [nicknameInput, setNicknameInput] = useState(plantEntries[index].nickname);\r\n    const [speciesInput, setSpeciesInput] = useState(plantEntries[index].species);\r\n    const [wateredInput, setWateredInput] = useState(plantEntries[index].reminders.watered.toString());\r\n    const [fertilizedInput, setFertilizedInput] = useState(plantEntries[index].reminders.fertilized.toString());\r\n    const [rotatedInput, setRotatedInput] = useState(plantEntries[index].reminders.rotated.toString());\r\n    const [prunnedInput, setPrunnedInput] = useState(plantEntries[index].reminders.prunned.toString());\r\n    const [trimmedInput, setTrimmedInput] = useState(plantEntries[index].reminders.trimmed.toString());\r\n    const [replantedInput, setReplantedInput] = useState(plantEntries[index].reminders.replanted.toString());\r\n    const [additionalNotesInput, setAdditionalNotesInput] = useState(plantEntries[index].notes.toString());\r\n\r\n    const [sunInput, setSunInput] = useState([false, false,false]);\r\n    const [waterInput, setWaterInput] = useState([false,false,false]);\r\n\r\n    useEffect(()=>{\r\n        initialbuttonSet(index);\r\n    }, []) // <-- empty dependency array\r\n\r\n    console.log(buttonSet.length);\r\n\r\n    function toggleSun(index)\r\n    {\r\n        let tempObject = [...sunInput];\r\n\r\n        if(tempObject[index])\r\n            tempObject[index] = false;\r\n        else\r\n            tempObject[index] = true;\r\n\r\n        setSunInput([...tempObject])\r\n\r\n    }\r\n\r\n    function toggleWater(index)\r\n    {\r\n        let tempObject = [...waterInput];\r\n        \r\n        if(tempObject[index])\r\n            tempObject[index] = false;\r\n        else\r\n            tempObject[index] = true;\r\n\r\n        setWaterInput([...tempObject])\r\n\r\n    }\r\n\r\n    // Function that \r\n    function toggleButton(id)\r\n    {\r\n        // Round buttons - All your buttons\r\n        let tempArray = [...roundButtons];\r\n\r\n        // Button set - three button set\r\n        let tempButtonSet = [...buttonSet];\r\n\r\n        // Current Button\r\n        let tempButton = {...roundButtons[id]};\r\n\r\n        // Check what the current color of the button is.\r\n        if(tempArray[id].backgroundColor == Color.theme)\r\n        {\r\n            // If the current length is 3 and we are on to adding a fourth button\r\n            if(tempButtonSet.length == 3)\r\n            {\r\n                // Id of the button we pop and pop it.\r\n                let poppedId = tempButtonSet[2].id;\r\n                tempButtonSet.pop();\r\n\r\n                // Change that button we popped to original\r\n                tempArray[poppedId].backgroundColor = Color.theme;\r\n\r\n                // Change the background color\r\n                tempArray[id].backgroundColor = Color.darkGreen;\r\n\r\n                // Push to our button set\r\n                tempButtonSet.push(tempArray[id]);\r\n\r\n                // Update our button set\r\n                setButtonSet([...tempButtonSet]);\r\n\r\n                // Update our round buttons\r\n                setRoundButtons([...tempArray]);\r\n\r\n            }\r\n            else\r\n            {\r\n            \r\n                // Change the background color\r\n                tempArray[id].backgroundColor = Color.darkGreen;\r\n\r\n                // Push to our button set\r\n                tempButtonSet.push(tempArray[id]);\r\n\r\n                // Update our button set\r\n                setButtonSet(currentButtons => [...currentButtons, tempButton]);\r\n\r\n                // Update our round buttons\r\n                setRoundButtons([...tempArray]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // Change the background color\r\n            tempArray[id].backgroundColor = Color.theme;\r\n\r\n            // Get rid of that button from our button set\r\n            tempButtonSet = tempButtonSet.filter((name) => name.id != id);\r\n\r\n            // Update our button set and round buttons\r\n            setButtonSet([...tempButtonSet]);\r\n            setRoundButtons([...tempArray]);\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    return(\r\n        <ScrollView contentContainerStyle = {{flexGrow:1}}>\r\n            {/* // Main Container - Purple */}\r\n            <View style = {styles.mainContainer}>\r\n                <StatusBar barstyle = \"dark-content\" hidden = {false} backgroundColor = {Color.theme} translucent = {true}/>\r\n\r\n                {/* Secondary Container Header - Blue */}\r\n                <View style = {styles.secondaryContainerHeader}>\r\n                    <Image source = {require('../assets/header.png')} />\r\n                    \r\n                    {/* Header Container - Red */}\r\n                    <View style = {styles.headerContainer}>\r\n\r\n                        {/* Image Upload Container - Brown */}\r\n                    <View style = {{justifyContent:'center', alignItems:'center'}}>\r\n                    <TouchableOpacity onPress={pickImage}>\r\n                            {image ? <Image source={{ uri: image }} style={{ width: 150, height: 150 }} /> :\r\n                                <Image source = {{uri:plantEntries[index].image}} style = {{resizeMode:'stretch', height:200, width:200, borderRadius:5}} />\r\n                            }\r\n                        </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Form Container */}\r\n                <View style = {styles.formContainer}>\r\n                    <View>\r\n                        <View style = {{marginBottom:5}}>\r\n                            <Text style = {{fontSize:16,color:'#816868'}}>Plant Nickname</Text>\r\n                            <TextInput \r\n                                    placeholder = \"Plant nickname\"\r\n                                    style = {{\r\n                                        borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                        backgroundColor:'white', width:'100%', paddingLeft:10,\r\n                                        paddingVertical:Platform.OS === 'ios' ? 5 : 0\r\n                                    }}\r\n                                    placeholderTextColor = 'black'\r\n                                    onChangeText = {(text) => {setNicknameInput(text); console.log(text)}}\r\n                                    value = {nicknameInput}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style = {{fontSize:16, color:'#816868'}}>Plant Species</Text>\r\n                            <TextInput \r\n                                    placeholder = \"Plant Species\"\r\n                                    style = {{\r\n                                        borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                        backgroundColor:'white', width:'100%', paddingLeft:10,\r\n                                        paddingVertical:Platform.OS === 'ios' ? 5 : 0\r\n                                    }}\r\n                                    placeholderTextColor = 'black'\r\n                                    onChangeText = {(text) => setSpeciesInput(text)}\r\n                                    value = {speciesInput}\r\n                                />\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Plant Classification Container */}\r\n                <View style = {styles.plantClassificationContainer}>\r\n                    <Text style = {{fontSize:16, color:'#816868'}}>Plant Classification (Select up to 3)</Text>\r\n                    <View style = {{flexDirection:'row', flexWrap:'wrap', justifyContent:'space-between'}}>\r\n                        <RoundButtonLarge name = {roundButtons[0].name} highlightColor = {roundButtons[0].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[0].id)} />\r\n                        <RoundButtonLarge name = {roundButtons[1].name} highlightColor = {roundButtons[1].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[1].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[2].name} highlightColor = {roundButtons[2].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[2].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[3].name} highlightColor = {roundButtons[3].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[3].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[4].name} highlightColor = {roundButtons[4].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[4].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[5].name} highlightColor = {roundButtons[5].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[5].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[6].name} highlightColor = {roundButtons[6].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[6].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[7].name} highlightColor = {roundButtons[7].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[7].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[8].name} highlightColor = {roundButtons[8].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[8].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[9].name} highlightColor = {roundButtons[9].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[9].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[10].name} highlightColor = {roundButtons[10].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[10].id)}/>\r\n                        <RoundButtonLarge name = {roundButtons[11].name} highlightColor = {roundButtons[11].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[11].id)}/>\r\n                        <View style = {{flexDirection:'row', justifyContent:'space-between', width:'66%'}}>\r\n                            <RoundButtonLarge name = {roundButtons[12].name} highlightColor = {roundButtons[12].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[12].id)}/>\r\n                            <RoundButtonLarge name = {roundButtons[13].name} highlightColor = {roundButtons[13].backgroundColor} onToggle = {toggleButton.bind(this,roundButtons[13].id)}/>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Weather Container */}\r\n                <View style = {styles.weatherContainer}>\r\n\r\n                    {/* Sunlight Set */}\r\n                    <View style = {{flexDirection:'row', justifyContent:'space-between'}}>\r\n                        <View>\r\n                            <Text style = {[styles.contentText, styles.ContentTextHeader]}>Sunlight Needed: </Text>\r\n                            <View style = {{flexDirection:'row'}}>\r\n                                \r\n                                <TouchableOpacity onPress = {() => toggleSun(0)}>\r\n                                {\r\n                                    sunInput[0] == false ? \r\n                                    <Image source = {require('../assets/dimmedSun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                    : \r\n                                    <Image source = {require('../assets/sun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                }\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity onPress = {() => toggleSun(1)}>\r\n                                {\r\n                                    sunInput[1] == false ? \r\n                                    <Image source = {require('../assets/dimmedSun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                    : \r\n                                    <Image source = {require('../assets/sun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                }\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity onPress = {() => toggleSun(2)}>\r\n                                {\r\n                                    sunInput[2] == false ? \r\n                                    <Image source = {require('../assets/dimmedSun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                    : \r\n                                    <Image source = {require('../assets/sun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                }\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n\r\n                    {/* Water Set */}\r\n                        <View>\r\n                            <Text style = {[styles.contentText, styles.ContentTextHeader]}>Water Needed:</Text>\r\n                            <View style = {{flexDirection:'row'}}>\r\n                            <TouchableOpacity onPress = {() => toggleWater(0)}>\r\n                                 {waterInput[0] == false ? \r\n                                 <Image source = {require('../assets/dimmedCloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />\r\n                                    : \r\n                                <Image source = {require('../assets/cloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />}\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress = {() => toggleWater(1)}>\r\n                                 {waterInput[1] == false ? \r\n                                 <Image source = {require('../assets/dimmedCloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />\r\n                                    : \r\n                                <Image source = {require('../assets/cloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />}\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress = {() => toggleWater(2)}>\r\n                                 {waterInput[2] == false ? \r\n                                 <Image source = {require('../assets/dimmedCloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />\r\n                                    : \r\n                                <Image source = {require('../assets/cloud.png')} resizeMode = 'cover' style = {{width: 30, height:24}}  />}\r\n                            </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Current Date Acquired Container */}\r\n                <View style = {{width:'85%', paddingTop:20, paddingLeft:10}}>\r\n                    <Text style = {{fontSize:16, color:Color.header}}>Current Date Acquired</Text>\r\n                    <Text>{formatDate(plantEntries[index].date)}</Text>\r\n                </View>\r\n\r\n                {/* New Date Selection Container */}\r\n                <View style = {{width:'85%', paddingTop:20, paddingLeft:10, alignItems:'flex-start'}}>\r\n                    <Text style = {{fontSize:16, color:Color.header}}>New Date Selection</Text>\r\n                    <Text style = {{color:Color.darkGreen, zIndex:1}} onPress = {showDatePicker}>Click here to select date</Text>\r\n                    <DateTimePickerModal\r\n                        isVisible={isDatePickerVisible}\r\n                        mode=\"date\"\r\n                        onConfirm={handleConfirm}\r\n                        onCancel={hideDatePicker}\r\n                    />\r\n                    <Text>{formatDateEntry(selectedDate)}</Text>\r\n                </View>\r\n\r\n\r\n\r\n                {/* Reminders Container */}\r\n                <View style = {styles.remindersContainer}>\r\n                    <Text style = {{color:Color.header}}><Text style = {{fontSize:16, color:Color.header, fontWeight:'bold'}}>Reminders</Text> (Leave the number blank if not applicable. )</Text>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>watered</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{\r\n                                borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                backgroundColor:'white', marginHorizontal:5,\r\n                                paddingHorizontal:Platform.OS === 'ios' ? 10 :0,\r\n                                paddingLeft:Platform.OS === 'ios' ? 10 : 10\r\n                            \r\n                            }}\r\n                            onChangeText = {(text) => setWateredInput(text)}\r\n                            value = {wateredInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>fertilized</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{\r\n                                borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                backgroundColor:'white', marginHorizontal:5,\r\n                                paddingHorizontal:Platform.OS === 'ios' ? 10 :0,\r\n                                paddingLeft:Platform.OS === 'ios' ? 10 : 10\r\n                            \r\n                            }}\r\n                            onChangeText = {(text) => setFertilizedInput(text)}\r\n                            value = {fertilizedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>rotated</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{\r\n                                borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                backgroundColor:'white', marginHorizontal:5,\r\n                                paddingHorizontal:Platform.OS === 'ios' ? 10 :0,\r\n                                paddingLeft:Platform.OS === 'ios' ? 10 : 10\r\n                            \r\n                            }}\r\n                            onChangeText = {(text) => setRotatedInput(text)}\r\n                            value = {rotatedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>pruned</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{\r\n                                borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                backgroundColor:'white', marginHorizontal:5,\r\n                                paddingHorizontal:Platform.OS === 'ios' ? 10 :0,\r\n                                paddingLeft:Platform.OS === 'ios' ? 10 : 10\r\n                            \r\n                            }}\r\n                            onChangeText = {(text) => setPrunnedInput(text)}\r\n                            value = {prunnedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>trimmed</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{\r\n                                borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                backgroundColor:'white', marginHorizontal:5,\r\n                                paddingHorizontal:Platform.OS === 'ios' ? 10 :0,\r\n                                paddingLeft:Platform.OS === 'ios' ? 10 : 10\r\n                            \r\n                            }}\r\n                            onChangeText = {(text) => setTrimmedInput(text)}\r\n                            value = {trimmedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                    <View style = {{flexDirection:'row', alignItems:'center'}}>    \r\n                        <Text style = {{color:Color.header}}>This plant needs to be <Text style = {{fontWeight:'bold'}}>replanted</Text> every </Text>\r\n                        <TextInput \r\n                            placeholder = \"##\" \r\n                            style = {{\r\n                                borderColor:'#a5dfb2', borderWidth:2,borderRadius:5,\r\n                                backgroundColor:'white', marginHorizontal:5,\r\n                                paddingHorizontal:Platform.OS === 'ios' ? 10 :0,\r\n                                paddingLeft:Platform.OS === 'ios' ? 10 : 10\r\n                            \r\n                            }}\r\n                            onChangeText = {(text) => setReplantedInput(text)}\r\n                            value = {replantedInput}\r\n                        />\r\n                        <Text style = {{color:Color.header}}>days</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                {/* Additional Notes Container */}\r\n                <View style = {styles.additionalNotesContainer}>\r\n                    <Text style = {{fontSize:16, color:Color.header}}>Additional Notes</Text>\r\n                    <TextInput \r\n                        placeholder = \"Write any additional notes you'd like to keep about your plant here.\"\r\n                        style = {{\r\n                            borderColor:'black',borderWidth:1, \r\n                            backgroundColor: \"white\", borderRadius:5,paddingLeft:10,paddingTop:5,marginTop:5, borderColor:Color.theme, \r\n                            textAlignVertical:'top', paddingVertical: Platform.OS ? 5 : 0\r\n                        }}\r\n                        placeholderTextColor = \"black\"\r\n                        numberOfLines = {10}\r\n                        multiline\r\n                        onChangeText = {(text) => setAdditionalNotesInput(text)}\r\n                        value = {additionalNotesInput}\r\n                    />\r\n\r\n                    {/* Buttons */}\r\n                    <View>\r\n                        <View style = {{flexDirection:'row', justifyContent:'space-between', marginTop:10}}>\r\n                            <TouchableOpacity \r\n                                style = {{backgroundColor:Color.theme, flexDirection:'row', borderRadius:5, alignItems:'center', width:150, paddingVertical:5}}\r\n                                onPress = {() => {confirmEntry(); navigation.goBack()}}\r\n                            >\r\n                                <Icon name = 'pencil' type = \"simple-line-icon\" color = \"white\" style = {{paddingLeft:5}}/>\r\n                                <Text style = {{color:'white', paddingLeft:10, fontSize:16}}>Confirm Edit</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity \r\n                                style = {{backgroundColor:Color.theme, flexDirection:'row', borderRadius:5, alignItems:'center', width:150}}\r\n                                onPress = {() => navigation.goBack()}\r\n                            >\r\n                                <Icon name ='md-close' type = 'ionicon' color = \"white\" style = {{paddingLeft:10}}/>\r\n                                <Text style = {{paddingLeft:10, color:'white', fontSize:16}}>Cancel</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\r\n                \r\n            {/* <Button title = \"Output\" onPress = {() => console.log(plantEntries)} /> */}\r\n\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n\r\n    function findEntryIndex(id)\r\n    {\r\n        for(let i = 0; i < plantEntries.length; i++)\r\n        {\r\n            if(plantEntries[i].key == id)\r\n                return i;\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function initialbuttonSet(index)\r\n    {\r\n        let tempButtonSet = [];\r\n        let tempRoundButtonSet = [...roundButtons];\r\n        for(let i = 0; i < plantEntries[index].classification.length; i++)\r\n        {\r\n            for(let j = 0; j < roundButtons.length; j++)\r\n            {\r\n                if(plantEntries[index].classification[i].toLowerCase() == roundButtons[j].name.toLowerCase())\r\n                {\r\n                   tempButtonSet.push(roundButtons[j]);\r\n                    tempRoundButtonSet[j].backgroundColor = Color.darkGreen;\r\n                   break;\r\n                }\r\n            }\r\n        }\r\n\r\n        setButtonSet([...tempButtonSet]);\r\n        // setRoundButtons(...tempRoundButtonSet);\r\n    \r\n    }\r\n\r\n    function formatDate(date)\r\n    {\r\n        let originalDate = date;\r\n    \r\n        let day;\r\n        let month = -1;\r\n        let year;\r\n    \r\n        let dateArray = originalDate.split(\"-\");\r\n    \r\n        switch(dateArray[1].toLowerCase())\r\n        {\r\n            case \"1\":\r\n                month = 'January';\r\n                break;\r\n            case \"2\":\r\n                month = 'February';\r\n                break;\r\n            case \"3\":\r\n                month = \"March\";\r\n                break;\r\n            case \"4\":\r\n                month = \"April\";\r\n                break;\r\n            case \"5\":\r\n                month = \"May\";\r\n                break;\r\n            case \"6\":\r\n                month = \"June\";\r\n                break;\r\n            case \"7\":\r\n                month = \"July\";\r\n                break;\r\n            case \"8\":\r\n                month = \"August\";\r\n                break;\r\n            case \"9\":\r\n                month = \"September\";\r\n                break;\r\n            case \"10\":\r\n                month = \"October\";\r\n                break;\r\n            case \"11\":\r\n                month = \"November\";\r\n                break;\r\n            case \"12\":\r\n                month = \"December\";\r\n                break;\r\n        }\r\n    \r\n        day = dateArray[2];\r\n        year = dateArray[0];\r\n        console.log(dateArray[1]);\r\n        console.log(month);\r\n    \r\n        let completeDate = `${month} ${day}, ${year}`;\r\n    \r\n        return completeDate;\r\n    }\r\n\r\n\r\n        // Display Date Selection\r\n        function formatDateEntry(date)\r\n        {\r\n            let tempDate = date.toString().split(\" \");\r\n            let month = tempDate[1];\r\n            let day = tempDate[2];\r\n            let year = tempDate[3];\r\n    \r\n            return `${month} ${day}, ${year}`;\r\n    \r\n        }\r\n    \r\n        // Convert Date Selection to add to Global on Submit\r\n        function convertedDate(date)\r\n        {\r\n            let originalDate = date.toString();\r\n    \r\n            let day;\r\n            let month = -1;\r\n            let year;\r\n    \r\n            let dateArray = originalDate.split(\" \");\r\n    \r\n            switch(dateArray[1].toLowerCase())\r\n            {\r\n                case 'jan':\r\n                    month = 1;\r\n                    break;\r\n                case 'feb':\r\n                    month = 2;\r\n                    break;\r\n    \r\n                case 'mar':\r\n                    month = 3;\r\n                    break;\r\n                \r\n                case 'apr':\r\n                    month = 4;\r\n                    break;\r\n                case 'may':\r\n                    month = 5;\r\n                    break;\r\n                case 'jun':\r\n                    month = 6;\r\n                    break;\r\n                case 'jul':\r\n                    month = 7;\r\n                    break;\r\n                case 'aug':\r\n                    month = 8;\r\n                    break;\r\n                case 'sep':\r\n                    month = 9;\r\n                    break;\r\n                case 'oct':\r\n                    month = 10;\r\n                    break;\r\n                case 'nov':\r\n                    month = 11;\r\n                    break;\r\n                case 'dec':\r\n                    month = 12;\r\n                    break;\r\n            }\r\n    \r\n            day = dateArray[2];\r\n            year = dateArray[3];\r\n            console.log(dateArray[1]);\r\n            console.log(month);\r\n    \r\n            let completeDate = `${year}-${month}-${day}`;\r\n    \r\n            return completeDate;\r\n        }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer:{\r\n        flex:1, \r\n        // borderWidth:5, borderColor:'purple',\r\n        backgroundColor:Color.background,\r\n        alignItems:'center',\r\n        paddingBottom:50\r\n    },\r\n    secondaryContainerHeader:{\r\n        marginTop:Platform.OS === 'ios' ? 0 : 11,\r\n        // borderWidth:5, borderColor:'blue', \r\n        alignItems:'center', \r\n        height:290,\r\n        width:'100%'\r\n      },\r\n    headerContainer:{\r\n        position:'absolute', \r\n        // borderWidth:5, borderColor:'red',\r\n        alignItems:'center',\r\n        justifyContent:'center', \r\n        width:'100%',height:'100%'\r\n    },\r\n    formContainer:{\r\n        // borderWidth:5, borderColor:'teal', \r\n        width:'80%'\r\n    },\r\n    plantClassificationContainer:{\r\n        // borderWidth:5, borderColor:'teal',\r\n         marginTop:10, \r\n        width:'80%'\r\n    },\r\n    weatherContainer:\r\n    {\r\n        paddingTop:20, \r\n        width:'80%',\r\n        // borderWidth:5, borderColor:'red'\r\n    },\r\n    remindersContainer:\r\n    {\r\n        // borderWidth:5, borderColor:'blue'\r\n        marginTop:20\r\n    },\r\n    additionalNotesContainer:\r\n    {\r\n        // borderWidth:5, borderColor:'blue',\r\n        marginTop:20, width:'85%'\r\n\r\n    },\r\n    HeaderText:\r\n    {\r\n        fontSize:25,\r\n        color: Color.header,\r\n        fontWeight:'bold'\r\n    },\r\n    contentText:{\r\n        fontSize:16\r\n    },\r\n    ContentTextHeader:{\r\n        color: Color.header,\r\n        \r\n    }\r\n    \r\n})\r\n\r\n\r\nexport {ModifyEntrySearch}"]},"metadata":{},"sourceType":"module"}