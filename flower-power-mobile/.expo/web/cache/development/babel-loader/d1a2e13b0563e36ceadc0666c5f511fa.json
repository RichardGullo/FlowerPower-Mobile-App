{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repositories\\\\FlowerPower-Mobile-App\\\\flower-power-mobile\\\\Screens\\\\ViewEntrySearch.js\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Color from \"../constants/colors\";\nimport { Header } from \"../components/Header\";\nimport { Input } from 'react-native-elements';\nimport { RoundButton } from \"../components/RoundButton\";\nimport { Icon } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nfunction ViewEntrySearch(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var itemId = route.params.itemId;\n  var id = itemId;\n\n  var _useContext = useContext(GlobalContext),\n      plantEntriesContext = _useContext.plantEntriesContext;\n\n  var _plantEntriesContext = _slicedToArray(plantEntriesContext, 2),\n      plantEntries = _plantEntriesContext[0],\n      setPlantEntries = _plantEntriesContext[1];\n\n  var _useState = useState(\"Richard\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState([false, false, false]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sunlight = _useState4[0],\n      setSunlight = _useState4[1];\n\n  var _useState5 = useState([false, false, false]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      water = _useState6[0],\n      setWater = _useState6[1];\n\n  var index = findEntryIndex(id);\n  var num = 0;\n  React.useEffect(function () {\n    var tempSunlight = [false, false, false];\n    var tempWater = [false, false, false];\n\n    for (var i = 0; i < plantEntries[index].sunlight; i++) {\n      tempSunlight[i] = true;\n    }\n\n    for (var _i = 0; _i < plantEntries[index].water; _i++) {\n      tempWater[_i] = true;\n    }\n\n    setSunlight([].concat(tempSunlight));\n    setWater([].concat(tempWater));\n  }, [plantEntries]);\n  return React.createElement(KeyboardAwareScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(StatusBar, {\n    barstyle: \"dark-content\",\n    hidden: false,\n    backgroundColor: Color.theme,\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.secondaryContainerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/header.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: plantEntries[index].image\n    },\n    style: {\n      resizeMode: 'stretch',\n      height: 200,\n      width: 200,\n      borderRadius: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }, \"Plant's Nickname:\"), React.createElement(Text, {\n    style: styles.contentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }, plantEntries[index].nickname)), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }, \"Plant Species: \"), React.createElement(Text, {\n    style: styles.contentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, plantEntries[index].species))), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"Plant Classification:\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, plantEntries[index].classification.map(function (name) {\n    return React.createElement(RoundButton, {\n      key: name,\n      name: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 87\n      }\n    });\n  })))), React.createElement(View, {\n    style: {\n      paddingTop: 20,\n      width: '90%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, \"Sunlight Needed: \"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, sunlight.map(function (name) {\n    return name == true ? React.createElement(Image, {\n      key: num++,\n      source: require(\"../assets/sun.png\"),\n      resizeMode: \"cover\",\n      style: {\n        width: 30,\n        height: 30\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 63\n      }\n    }) : React.createElement(Image, {\n      key: num++,\n      source: require(\"../assets/dimmedSun.png\"),\n      resizeMode: \"cover\",\n      style: {\n        width: 30,\n        height: 30\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 47\n      }\n    });\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }, \"Water Needed:\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, water.map(function (name) {\n    return name == true ? React.createElement(Image, {\n      key: num++,\n      source: require(\"../assets/cloud.png\"),\n      resizeMode: \"stretch\",\n      style: {\n        width: 30,\n        height: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 63\n      }\n    }) : React.createElement(Image, {\n      key: num++,\n      source: require(\"../assets/dimmedCloud.png\"),\n      resizeMode: \"stretch\",\n      style: {\n        width: 30,\n        height: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 47\n      }\n    });\n  }))))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Date Acquired: \"), React.createElement(Text, {\n    style: styles.contentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, formatDate(plantEntries[index].date))), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, styles.ContentTextHeader, {\n      paddingBottom: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, \"Reminders:\"), React.createElement(View, {\n    style: {\n      height: 120,\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: [styles.contentText, {\n      fontSize: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"The plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 107\n    }\n  }, \"watered\"), \" every \", plantEntries[index].reminders.watered, \" days.\"), React.createElement(Text, {\n    style: [styles.contentText, {\n      fontSize: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, \"The plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 107\n    }\n  }, \"fertilized\"), \" every \", plantEntries[index].reminders.fertilized, \" days.\"), React.createElement(Text, {\n    style: [styles.contentText, {\n      fontSize: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"The plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 107\n    }\n  }, \"rotated\"), \" every \", plantEntries[index].reminders.rotated, \" days.\"), React.createElement(Text, {\n    style: [styles.contentText, {\n      fontSize: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, \"The plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 107\n    }\n  }, \"pruned\"), \" every \", plantEntries[index].reminders.prunned, \" days.\"), React.createElement(Text, {\n    style: [styles.contentText, {\n      fontSize: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, \"The plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 107\n    }\n  }, \"trimmed\"), \" every \", plantEntries[index].reminders.trimmed, \" days.\"), React.createElement(Text, {\n    style: [styles.contentText, {\n      fontSize: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, \"The plant needs to be \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 107\n    }\n  }, \"replanted\"), \" every \", plantEntries[index].reminders.replanted, \" days.\"))), React.createElement(View, {\n    style: styles.additionalNotesContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: Color.darkGreen,\n      textDecorationLine: 'underline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"Additional Notes:\"), React.createElement(TextInput, {\n    placeholder: plantEntries[index].notes,\n    style: {\n      borderColor: 'black',\n      borderWidth: 1,\n      borderRadius: 5,\n      backgroundColor: \"white\",\n      paddingLeft: 10,\n      paddingTop: 5,\n      marginTop: 5,\n      borderColor: Color.theme,\n      textAlignVertical: 'top',\n      paddingVertical: Platform.OS === 'ios' ? 5 : 0\n    },\n    placeholderTextColor: \"black\",\n    numberOfLines: 10,\n    multiline: true,\n    value: plantEntries[index].notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: Color.theme,\n      flexDirection: 'row',\n      borderRadius: 5,\n      alignItems: 'center',\n      width: 150,\n      paddingVertical: 5,\n      zIndex: 1\n    },\n    onPress: function onPress() {\n      navigation.navigate('ModifyEntrySearch', {\n        itemId: itemId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, React.createElement(Icon, {\n    name: \"pencil\",\n    type: \"simple-line-icon\",\n    color: \"white\",\n    style: {\n      paddingLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      paddingLeft: 10,\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 37\n    }\n  }, \"Modify Entry\")), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: Color.theme,\n      flexDirection: 'row',\n      borderRadius: 5,\n      alignItems: 'center',\n      width: 150\n    },\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, React.createElement(Icon, {\n    name: \"md-arrow-back\",\n    type: \"ionicon\",\n    color: \"white\",\n    style: {\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }), React.createElement(Text, {\n    style: {\n      paddingLeft: 10,\n      color: 'white',\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }, \"Go Back\"))))))));\n\n  function deleteEntry() {\n    var tempArray = _toConsumableArray(plantEntries);\n\n    tempArray = tempArray.filter(function (name) {\n      return name.key != plantEntries[index].key;\n    });\n    setPlantEntries(_toConsumableArray(tempArray));\n  }\n\n  function findEntryIndex(id) {\n    for (var i = 0; i < plantEntries.length; i++) {\n      if (plantEntries[i].key == id) return i;\n    }\n\n    return -1;\n  }\n\n  function formatDate(date) {\n    var originalDate = date;\n    var day;\n    var month = -1;\n    var year;\n    var dateArray = originalDate.split(\"-\");\n\n    switch (dateArray[1].toLowerCase()) {\n      case \"1\":\n        month = 'January';\n        break;\n\n      case \"2\":\n        month = 'February';\n        break;\n\n      case \"3\":\n        month = \"March\";\n        break;\n\n      case \"4\":\n        month = \"April\";\n        break;\n\n      case \"5\":\n        month = \"May\";\n        break;\n\n      case \"6\":\n        month = \"June\";\n        break;\n\n      case \"7\":\n        month = \"July\";\n        break;\n\n      case \"8\":\n        month = \"August\";\n        break;\n\n      case \"9\":\n        month = \"September\";\n        break;\n\n      case \"10\":\n        month = \"October\";\n        break;\n\n      case \"11\":\n        month = \"November\";\n        break;\n\n      case \"12\":\n        month = \"December\";\n        break;\n    }\n\n    day = dateArray[2];\n    year = dateArray[0];\n    console.log(dateArray[1]);\n    console.log(month);\n    var completeDate = month + \" \" + day + \", \" + year;\n    return completeDate;\n  }\n}\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: Color.background,\n    alignItems: 'center',\n    paddingBottom: 50\n  },\n  secondaryContainerHeader: {\n    marginTop: Platform.OS === 'ios' ? 0 : 11,\n    alignItems: 'center',\n    width: '100%',\n    height: 307\n  },\n  headerContainer: {\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%'\n  },\n  contentContainer: {\n    width: '80%'\n  },\n  HeaderText: {\n    fontSize: 25,\n    color: Color.header,\n    fontWeight: 'bold'\n  },\n  roundButton: {\n    backgroundColor: Color.theme,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: 'red',\n    height: 25,\n    width: 100\n  },\n  weatherContainer: {},\n  remindersContainer: {\n    marginTop: 20\n  },\n  additionalNotesContainer: {\n    marginTop: 20\n  },\n  contentText: {\n    fontSize: 16\n  },\n  ContentTextHeader: {\n    color: '#358B59',\n    textDecorationLine: 'underline'\n  }\n});\nexport { ViewEntrySearch };","map":{"version":3,"sources":["D:/Repositories/FlowerPower-Mobile-App/flower-power-mobile/Screens/ViewEntrySearch.js"],"names":["React","useContext","useState","Color","Header","Input","RoundButton","Icon","ScrollView","GlobalContext","KeyboardAwareScrollView","ViewEntrySearch","navigation","route","itemId","params","id","plantEntriesContext","plantEntries","setPlantEntries","username","setUsername","sunlight","setSunlight","water","setWater","index","findEntryIndex","num","useEffect","tempSunlight","tempWater","i","flexGrow","styles","mainContainer","theme","secondaryContainerHeader","require","headerContainer","uri","image","resizeMode","height","width","borderRadius","contentContainer","flexDirection","contentText","ContentTextHeader","nickname","species","marginTop","classification","map","name","paddingTop","justifyContent","formatDate","date","paddingBottom","fontSize","fontWeight","reminders","watered","fertilized","rotated","prunned","trimmed","replanted","additionalNotesContainer","color","darkGreen","textDecorationLine","notes","borderColor","borderWidth","backgroundColor","paddingLeft","textAlignVertical","paddingVertical","Platform","OS","alignItems","zIndex","navigate","goBack","deleteEntry","tempArray","filter","key","length","originalDate","day","month","year","dateArray","split","toLowerCase","console","log","completeDate","StyleSheet","create","flex","background","position","HeaderText","header","roundButton","weatherContainer","remindersContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;;;;;;;;;;AAEA,OAAOC,KAAP;AACA,SAAQC,MAAR;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAAQC,WAAR;AACA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,aAAT;AACA,SAASC,uBAAT,QAAwC,yCAAxC;;AAEA,SAASC,eAAT,OACA;AAAA;;AAAA,MAD0BC,UAC1B,QAD0BA,UAC1B;AAAA,MADsCC,KACtC,QADsCA,KACtC;AAAA,MACWC,MADX,GACqBD,KAAK,CAACE,MAD3B,CACWD,MADX;AAEI,MAAME,EAAE,GAAGF,MAAX;;AAFJ,oBAGkCb,UAAU,CAACQ,aAAD,CAH5C;AAAA,MAGWQ,mBAHX,eAGWA,mBAHX;;AAAA,4CAI2CA,mBAJ3C;AAAA,MAIUC,YAJV;AAAA,MAIwBC,eAJxB;;AAAA,kBAKmCjB,QAAQ,CAAC,SAAD,CAL3C;AAAA;AAAA,MAKUkB,QALV;AAAA,MAKoBC,WALpB;;AAAA,mBAMmCnB,QAAQ,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CAAD,CAN3C;AAAA;AAAA,MAMUoB,QANV;AAAA,MAMoBC,WANpB;;AAAA,mBAO6BrB,QAAQ,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CAAD,CAPrC;AAAA;AAAA,MAOUsB,KAPV;AAAA,MAOiBC,QAPjB;;AASI,MAAMC,KAAK,GAAGC,cAAc,CAACX,EAAD,CAA5B;AACA,MAAIY,GAAG,GAAG,CAAV;AAGA5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,YAAK;AAEjB,QAAIC,YAAY,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CAAnB;AACA,QAAIC,SAAS,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CAAhB;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,YAAY,CAACQ,KAAD,CAAZ,CAAoBJ,QAAvC,EAAiDU,CAAC,EAAlD,EACA;AACIF,MAAAA,YAAY,CAACE,CAAD,CAAZ,GAAkB,IAAlB;AACH;;AAED,SAAI,IAAIA,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAGd,YAAY,CAACQ,KAAD,CAAZ,CAAoBF,KAAvC,EAA8CQ,EAAC,EAA/C,EACA;AACAD,MAAAA,SAAS,CAACC,EAAD,CAAT,GAAe,IAAf;AACC;;AAEDT,IAAAA,WAAW,WAAKO,YAAL,EAAX;AACAL,IAAAA,QAAQ,WAAKM,SAAL,EAAR;AAEH,GAlBD,EAkBE,CAACb,YAAD,CAlBF;AAoBA,SACI,oBAAC,uBAAD;AAAyB,IAAA,qBAAqB,EAAI;AAACe,MAAAA,QAAQ,EAAC;AAAV,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAG,cAAtB;AAAqC,IAAA,MAAM,EAAI,KAA/C;AAAsD,IAAA,eAAe,EAAIhC,KAAK,CAACiC,KAA/E;AAAsF,IAAA,WAAW,EAAI,IAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIF,MAAM,CAACG,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAIC,OAAO,wBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIJ,MAAM,CAACK,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAI;AAACC,MAAAA,GAAG,EAACtB,YAAY,CAACQ,KAAD,CAAZ,CAAoBe;AAAzB,KAAjB;AAAkD,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAC,SAAZ;AAAuBC,MAAAA,MAAM,EAAC,GAA9B;AAAmCC,MAAAA,KAAK,EAAC,GAAzC;AAA8CC,MAAAA,YAAY,EAAC;AAA3D,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAJJ,CAJR,EAkBQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIX,MAAM,CAACY,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,aAAa,EAAC;AAAf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACb,MAAM,CAACc,WAAR,EAAqBd,MAAM,CAACe,iBAA5B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIf,MAAM,CAACc,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC9B,YAAY,CAACQ,KAAD,CAAZ,CAAoBwB,QAAxD,CAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACH,MAAAA,aAAa,EAAC;AAAf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACb,MAAM,CAACc,WAAR,EAAoBd,MAAM,CAACe,iBAA3B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIf,MAAM,CAACc,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC9B,YAAY,CAACQ,KAAD,CAAZ,CAAoByB,OAAxD,CAFJ,CALJ,CADJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAAClB,MAAM,CAACc,WAAR,EAAqBd,MAAM,CAACe,iBAA5B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACF,MAAAA,aAAa,EAAC;AAAf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK7B,YAAY,CAACQ,KAAD,CAAZ,CAAoB2B,cAApB,CAAmCC,GAAnC,CAAuC,UAACC,IAAD;AAAA,WAAU,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAIA,IAApB;AAA0B,MAAA,IAAI,EAAIA,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAvC,CADL,CAFJ,CAZJ,CAFJ,EAuBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAC,EAAZ;AAAgBZ,MAAAA,KAAK,EAAC;AAAtB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACG,MAAAA,aAAa,EAAC,KAAf;AAAsBU,MAAAA,cAAc,EAAC;AAArC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACvB,MAAM,CAACc,WAAR,EAAqBd,MAAM,CAACe,iBAA5B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACF,MAAAA,aAAa,EAAC;AAAf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKzB,QAAQ,CAACgC,GAAT,CAAa,UAACC,IAAD;AAAA,WACTA,IAAI,IAAI,IAAT,GAAkB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAI3B,GAAG,EAAjB;AAAqB,MAAA,MAAM,EAAIU,OAAO,qBAAtC;AAA6D,MAAA,UAAU,EAAG,OAA1E;AAAkF,MAAA,KAAK,EAAI;AAACM,QAAAA,KAAK,EAAE,EAAR;AAAYD,QAAAA,MAAM,EAAC;AAAnB,OAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,GACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAGf,GAAG,EAAhB;AAAoB,MAAA,MAAM,EAAIU,OAAO,2BAArC;AAAkE,MAAA,UAAU,EAAG,OAA/E;AAAuF,MAAA,KAAK,EAAI;AAACM,QAAAA,KAAK,EAAE,EAAR;AAAYD,QAAAA,MAAM,EAAC;AAAnB,OAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFQ;AAAA,GAAb,CADL,CAFJ,CADJ,EAYI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACT,MAAM,CAACc,WAAR,EAAqBd,MAAM,CAACe,iBAA5B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACF,MAAAA,aAAa,EAAC;AAAf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCvB,KAAK,CAAC8B,GAAN,CAAU,UAACC,IAAD;AAAA,WACFA,IAAI,IAAI,IAAT,GAAkB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAI3B,GAAG,EAAjB;AAAqB,MAAA,MAAM,EAAIU,OAAO,uBAAtC;AAA+D,MAAA,UAAU,EAAG,SAA5E;AAAsF,MAAA,KAAK,EAAI;AAACM,QAAAA,KAAK,EAAC,EAAP;AAAWD,QAAAA,MAAM,EAAC;AAAlB,OAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,GACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAIf,GAAG,EAAjB;AAAqB,MAAA,MAAM,EAAIU,OAAO,6BAAtC;AAAqE,MAAA,UAAU,EAAG,SAAlF;AAA4F,MAAA,KAAK,EAAI;AAACM,QAAAA,KAAK,EAAC,EAAP;AAAWD,QAAAA,MAAM,EAAC;AAAlB,OAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC;AAAA,GAAV,CADD,CAFJ,CAZJ,CAHJ,CAvBJ,EAmDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACI,MAAAA,aAAa,EAAC,KAAf;AAAsBK,MAAAA,SAAS,EAAC;AAAhC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAAClB,MAAM,CAACc,WAAR,EAAqBd,MAAM,CAACe,iBAA5B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIf,MAAM,CAACc,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCU,UAAU,CAACxC,YAAY,CAACQ,KAAD,CAAZ,CAAoBiC,IAArB,CAA9C,CAFJ,CAnDJ,EAyDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACP,MAAAA,SAAS,EAAC;AAAX,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAAClB,MAAM,CAACc,WAAR,EAAqBd,MAAM,CAACe,iBAA5B,EAA+C;AAACW,MAAAA,aAAa,EAAC;AAAf,KAA/C,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACjB,MAAAA,MAAM,EAAC,GAAR;AAAac,MAAAA,cAAc,EAAC;AAA5B,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACvB,MAAM,CAACc,WAAR,EAAqB;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAArB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0E,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1E,aAAoI5C,YAAY,CAACQ,KAAD,CAAZ,CAAoBqC,SAApB,CAA8BC,OAAlK,WADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAAC9B,MAAM,CAACc,WAAR,EAAqB;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAArB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0E,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA1E,aAAuI5C,YAAY,CAACQ,KAAD,CAAZ,CAAoBqC,SAApB,CAA8BE,UAArK,WAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAAC/B,MAAM,CAACc,WAAR,EAAqB;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAArB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0E,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1E,aAAoI5C,YAAY,CAACQ,KAAD,CAAZ,CAAoBqC,SAApB,CAA8BG,OAAlK,WAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAAChC,MAAM,CAACc,WAAR,EAAqB;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAArB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0E,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1E,aAAmI5C,YAAY,CAACQ,KAAD,CAAZ,CAAoBqC,SAApB,CAA8BI,OAAjK,WAJJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACjC,MAAM,CAACc,WAAR,EAAqB;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAArB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0E,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1E,aAAoI5C,YAAY,CAACQ,KAAD,CAAZ,CAAoBqC,SAApB,CAA8BK,OAAlK,WALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAAClC,MAAM,CAACc,WAAR,EAAqB;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAArB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0E,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA1E,aAAsI5C,YAAY,CAACQ,KAAD,CAAZ,CAAoBqC,SAApB,CAA8BM,SAApK,WANJ,CAFJ,CAzDJ,EAsEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAInC,MAAM,CAACoC,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACT,MAAAA,QAAQ,EAAC,EAAV;AAAcU,MAAAA,KAAK,EAACpE,KAAK,CAACqE,SAA1B;AAAqCC,MAAAA,kBAAkB,EAAC;AAAxD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAIvD,YAAY,CAACQ,KAAD,CAAZ,CAAoBgD,KADvC;AAEI,IAAA,KAAK,EAAI;AACLC,MAAAA,WAAW,EAAC,OADP;AACeC,MAAAA,WAAW,EAAC,CAD3B;AAC6B/B,MAAAA,YAAY,EAAC,CAD1C;AAELgC,MAAAA,eAAe,EAAE,OAFZ;AAGLC,MAAAA,WAAW,EAAC,EAHP;AAGUtB,MAAAA,UAAU,EAAC,CAHrB;AAGuBJ,MAAAA,SAAS,EAAC,CAHjC;AAILuB,MAAAA,WAAW,EAACxE,KAAK,CAACiC,KAJb;AAIoB2C,MAAAA,iBAAiB,EAAC,KAJtC;AAKLC,MAAAA,eAAe,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B;AALxC,KAFb;AASI,IAAA,oBAAoB,EAAG,OAT3B;AAUI,IAAA,aAAa,EAAI,EAVrB;AAWI,IAAA,SAAS,MAXb;AAYI,IAAA,KAAK,EAAIhE,YAAY,CAACQ,KAAD,CAAZ,CAAoBgD,KAZjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAkBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAAC3B,MAAAA,aAAa,EAAC,KAAf;AAAsBU,MAAAA,cAAc,EAAC,eAArC;AAAsDL,MAAAA,SAAS,EAAC;AAAhE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAI;AAACyB,MAAAA,eAAe,EAAC1E,KAAK,CAACiC,KAAvB;AAA8BW,MAAAA,aAAa,EAAC,KAA5C;AAAmDF,MAAAA,YAAY,EAAC,CAAhE;AAAmEsC,MAAAA,UAAU,EAAC,QAA9E;AAAwFvC,MAAAA,KAAK,EAAC,GAA9F;AAAmGoC,MAAAA,eAAe,EAAC,CAAnH;AAAqHI,MAAAA,MAAM,EAAC;AAA5H,KADb;AAEI,IAAA,OAAO,EAAE,mBAAM;AACXxE,MAAAA,UAAU,CAACyE,QAAX,CAAoB,mBAApB,EAAwC;AAACvE,QAAAA,MAAM,EAACA;AAAR,OAAxC;AAAyD,KAHjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAG,QAAb;AAAsB,IAAA,IAAI,EAAG,kBAA7B;AAAgD,IAAA,KAAK,EAAG,OAAxD;AAAgE,IAAA,KAAK,EAAI;AAACgE,MAAAA,WAAW,EAAC;AAAb,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACP,MAAAA,KAAK,EAAC,OAAP;AAAgBO,MAAAA,WAAW,EAAC,EAA5B;AAAgCjB,MAAAA,QAAQ,EAAC;AAAzC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CADJ,EASI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAI;AAACgB,MAAAA,eAAe,EAAC1E,KAAK,CAACiC,KAAvB;AAA8BW,MAAAA,aAAa,EAAC,KAA5C;AAAmDF,MAAAA,YAAY,EAAC,CAAhE;AAAmEsC,MAAAA,UAAU,EAAC,QAA9E;AAAwFvC,MAAAA,KAAK,EAAC;AAA9F,KADb;AAEI,IAAA,OAAO,EAAI,mBAAM;AAAChC,MAAAA,UAAU,CAAC0E,MAAX;AAAqB,KAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,eAAZ;AAA4B,IAAA,IAAI,EAAG,SAAnC;AAA6C,IAAA,KAAK,EAAG,OAArD;AAA6D,IAAA,KAAK,EAAI;AAACR,MAAAA,WAAW,EAAC;AAAb,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACA,MAAAA,WAAW,EAAC,EAAb;AAAiBP,MAAAA,KAAK,EAAC,OAAvB;AAAgCV,MAAAA,QAAQ,EAAC;AAAzC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CATJ,CADJ,CAlBJ,CAtEA,CAlBR,CAFJ,CADJ;;AAyIA,WAAS0B,WAAT,GACA;AACI,QAAIC,SAAS,sBAAOtE,YAAP,CAAb;;AAEAsE,IAAAA,SAAS,GAAGA,SAAS,CAACC,MAAV,CAAiB,UAAClC,IAAD;AAAA,aAAUA,IAAI,CAACmC,GAAL,IAAYxE,YAAY,CAACQ,KAAD,CAAZ,CAAoBgE,GAA1C;AAAA,KAAjB,CAAZ;AAEAvE,IAAAA,eAAe,oBAAKqE,SAAL,EAAf;AACH;;AAED,WAAS7D,cAAT,CAAwBX,EAAxB,EACA;AACI,SAAI,IAAIgB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,YAAY,CAACyE,MAAhC,EAAwC3D,CAAC,EAAzC,EACA;AACI,UAAGd,YAAY,CAACc,CAAD,CAAZ,CAAgB0D,GAAhB,IAAuB1E,EAA1B,EACI,OAAOgB,CAAP;AACP;;AAED,WAAO,CAAC,CAAR;AACH;;AAED,WAAS0B,UAAT,CAAoBC,IAApB,EACA;AACI,QAAIiC,YAAY,GAAGjC,IAAnB;AAEA,QAAIkC,GAAJ;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb;AACA,QAAIC,IAAJ;AAEA,QAAIC,SAAS,GAAGJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,CAAhB;;AAEA,YAAOD,SAAS,CAAC,CAAD,CAAT,CAAaE,WAAb,EAAP;AAEI,WAAK,GAAL;AACIJ,QAAAA,KAAK,GAAG,SAAR;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,GAAG,UAAR;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,GAAG,OAAR;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,GAAG,OAAR;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,GAAG,KAAR;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,GAAG,MAAR;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,GAAG,MAAR;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,GAAG,QAAR;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,GAAG,WAAR;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,KAAK,GAAG,SAAR;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,KAAK,GAAG,UAAR;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,KAAK,GAAG,UAAR;AACA;AArCR;;AAwCAD,IAAAA,GAAG,GAAGG,SAAS,CAAC,CAAD,CAAf;AACAD,IAAAA,IAAI,GAAGC,SAAS,CAAC,CAAD,CAAhB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAAC,CAAD,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA,QAAIO,YAAY,GAAMP,KAAN,SAAeD,GAAf,UAAuBE,IAAvC;AAEA,WAAOM,YAAP;AACH;AAIJ;;AAGD,IAAMnE,MAAM,GAAGoE,UAAU,CAACC,MAAX,CAAkB;AAC7BpE,EAAAA,aAAa,EACb;AACIqE,IAAAA,IAAI,EAAC,CADT;AAGI3B,IAAAA,eAAe,EAAC1E,KAAK,CAACsG,UAH1B;AAIItB,IAAAA,UAAU,EAAC,QAJf;AAKIvB,IAAAA,aAAa,EAAC;AALlB,GAF6B;AAS7BvB,EAAAA,wBAAwB,EAAC;AACrBe,IAAAA,SAAS,EAAC6B,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B,EADjB;AAGrBC,IAAAA,UAAU,EAAC,QAHU;AAIrBvC,IAAAA,KAAK,EAAC,MAJe;AAIPD,IAAAA,MAAM,EAAC;AAJA,GATI;AAe7BJ,EAAAA,eAAe,EAAC;AACZmE,IAAAA,QAAQ,EAAC,UADG;AAGZvB,IAAAA,UAAU,EAAC,QAHC;AAIZ1B,IAAAA,cAAc,EAAC,QAJH;AAKZb,IAAAA,KAAK,EAAC,MALM;AAKCD,IAAAA,MAAM,EAAC;AALR,GAfa;AAsB7BG,EAAAA,gBAAgB,EAAC;AAEbF,IAAAA,KAAK,EAAC;AAFO,GAtBY;AA0B7B+D,EAAAA,UAAU,EACV;AACI9C,IAAAA,QAAQ,EAAC,EADb;AAEIU,IAAAA,KAAK,EAAEpE,KAAK,CAACyG,MAFjB;AAGI9C,IAAAA,UAAU,EAAC;AAHf,GA3B6B;AAgC7B+C,EAAAA,WAAW,EACX;AACIhC,IAAAA,eAAe,EAAC1E,KAAK,CAACiC,KAD1B;AAEIS,IAAAA,YAAY,EAAC,EAFjB;AAGI+B,IAAAA,WAAW,EAAC,CAHhB;AAIID,IAAAA,WAAW,EAAC,KAJhB;AAKIhC,IAAAA,MAAM,EAAC,EALX;AAMIC,IAAAA,KAAK,EAAC;AANV,GAjC6B;AAyCzBkE,EAAAA,gBAAgB,EACpB,EA1C6B;AA6C7BC,EAAAA,kBAAkB,EAClB;AAEI3D,IAAAA,SAAS,EAAC;AAFd,GA9C6B;AAkD7BkB,EAAAA,wBAAwB,EACxB;AAEIlB,IAAAA,SAAS,EAAC;AAFd,GAnD6B;AAwD7BJ,EAAAA,WAAW,EAAC;AACRa,IAAAA,QAAQ,EAAC;AADD,GAxDiB;AA2D7BZ,EAAAA,iBAAiB,EAAC;AACdsB,IAAAA,KAAK,EAAE,SADO;AAEdE,IAAAA,kBAAkB,EAAC;AAFL;AA3DW,CAAlB,CAAf;AAkEA,SAAQ9D,eAAR","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {Text, View, Button, StyleSheet, TextInput,Image,StatusBar, TouchableOpacity, ImageBackground} from 'react-native'\r\nimport Color from '../constants/colors';\r\nimport {Header} from '../components/Header'\r\nimport { Input } from 'react-native-elements';\r\nimport {RoundButton} from '../components/RoundButton'\r\nimport {Icon} from 'react-native-elements'\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\n\r\nfunction ViewEntrySearch({navigation, route})\r\n{\r\n    const {itemId} = route.params;\r\n    const id = itemId;\r\n    const {plantEntriesContext} = useContext(GlobalContext) \r\n    const[plantEntries, setPlantEntries] = plantEntriesContext;\r\n    const[username, setUsername] = useState(\"Richard\");\r\n    const[sunlight, setSunlight] = useState([false,false,false]);\r\n    const[water, setWater] = useState([false,false,false]);\r\n\r\n    const index = findEntryIndex(id);  \r\n    let num = 0;\r\n\r\n    // Execute onload\r\n    React.useEffect(() =>{\r\n\r\n        let tempSunlight = [false,false,false];\r\n        let tempWater = [false,false,false];\r\n\r\n        for(let i = 0; i < plantEntries[index].sunlight; i++)\r\n        {\r\n            tempSunlight[i] = true;\r\n        }\r\n\r\n        for(let i = 0; i < plantEntries[index].water; i++)\r\n        {\r\n        tempWater[i] = true;\r\n        }\r\n\r\n        setSunlight([...tempSunlight]);\r\n        setWater([...tempWater]);\r\n\r\n    },[plantEntries])\r\n\r\n    return(\r\n        <KeyboardAwareScrollView contentContainerStyle = {{flexGrow:1}}>\r\n            {/* Main Container */}\r\n            <View style = {styles.mainContainer}>\r\n                <StatusBar barstyle = \"dark-content\" hidden = {false} backgroundColor = {Color.theme} translucent = {true}/>\r\n\r\n                    {/* Secondary Container Header - Blue */}\r\n                    <View style = {styles.secondaryContainerHeader}>\r\n                        <Image source = {require('../assets/header.png') } />\r\n\r\n                        {/* Header Container - Red */}\r\n                        <View style = {styles.headerContainer}>\r\n\r\n                            {/* Tree Image */}\r\n                            <Image source = {{uri:plantEntries[index].image}} style = {{resizeMode:'stretch', height:200, width:200, borderRadius:5}} />\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    {/* Content Container - Blue */}\r\n                    <View style = {styles.contentContainer}>\r\n                    \r\n                        <View>\r\n                            <View>\r\n                                <View style = {{flexDirection:'row'}}>\r\n                                    <Text style = {[styles.contentText, styles.ContentTextHeader]}>Plant's Nickname:</Text>\r\n                                    <Text style = {styles.contentText}>{plantEntries[index].nickname}</Text>\r\n                                </View>\r\n                                <View style = {{flexDirection:'row'}}>\r\n                                    <Text style = {[styles.contentText,styles.ContentTextHeader]}>Plant Species: </Text>\r\n                                    <Text style = {styles.contentText}>{plantEntries[index].species}</Text>\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style = {{marginTop:10}}>\r\n                                <Text style = {[styles.contentText, styles.ContentTextHeader]}>Plant Classification:</Text>\r\n                                <View style = {{flexDirection:'row'}}>\r\n                                    {plantEntries[index].classification.map((name) => <RoundButton key = {name} name = {name}/>)}\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Weather Container */}\r\n                        <View style = {{paddingTop:20, width:'90%'}}>\r\n\r\n                            {/* Sunlight Set */}\r\n                            <View style = {{flexDirection:'row', justifyContent:'space-between'}}>\r\n                                <View>\r\n                                    <Text style = {[styles.contentText, styles.ContentTextHeader]}>Sunlight Needed: </Text>\r\n                                    <View style = {{flexDirection:'row'}}>\r\n                                        {sunlight.map((name) => \r\n                                            (name == true) ?  <Image key = {num++} source = {require('../assets/sun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                            : <Image key ={num++} source = {require('../assets/dimmedSun.png')} resizeMode = 'cover' style = {{width: 30, height:30}}  />\r\n                                        )}                \r\n                                    </View>\r\n                                </View>\r\n\r\n                            {/* Water Set */}\r\n                                <View>\r\n                                    <Text style = {[styles.contentText, styles.ContentTextHeader]}>Water Needed:</Text>\r\n                                    <View style = {{flexDirection:'row'}}>\r\n                                    {water.map((name) => \r\n                                            (name == true) ?  <Image key = {num++} source = {require('../assets/cloud.png')} resizeMode = 'stretch' style = {{width:30, height:24}}  />\r\n                                            : <Image key = {num++} source = {require('../assets/dimmedCloud.png')} resizeMode = 'stretch' style = {{width:30, height:24}} />\r\n                                    )}     \r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Date Acquired */}\r\n                        <View style = {{flexDirection:'row', marginTop:10}}>\r\n                            <Text style = {[styles.contentText, styles.ContentTextHeader]}>Date Acquired: </Text>\r\n                            <Text style = {styles.contentText}>{formatDate(plantEntries[index].date)}</Text>\r\n                        </View>\r\n\r\n                        {/* Reminders */}\r\n                        <View style = {{marginTop:10}}>\r\n                            <Text style = {[styles.contentText, styles.ContentTextHeader, {paddingBottom:5}]}>Reminders:</Text>\r\n                            <View style = {{height:120, justifyContent:'space-between'}}>\r\n                                <Text style = {[styles.contentText, {fontSize:12}]}>The plant needs to be <Text style = {{fontWeight:'bold'}}>watered</Text> every {plantEntries[index].reminders.watered} days.</Text>\r\n                                <Text style = {[styles.contentText, {fontSize:12}]}>The plant needs to be <Text style = {{fontWeight:'bold'}}>fertilized</Text> every {plantEntries[index].reminders.fertilized} days.</Text>\r\n                                <Text style = {[styles.contentText, {fontSize:12}]}>The plant needs to be <Text style = {{fontWeight:'bold'}}>rotated</Text> every {plantEntries[index].reminders.rotated} days.</Text>\r\n                                <Text style = {[styles.contentText, {fontSize:12}]}>The plant needs to be <Text style = {{fontWeight:'bold'}}>pruned</Text> every {plantEntries[index].reminders.prunned} days.</Text>\r\n                                <Text style = {[styles.contentText, {fontSize:12}]}>The plant needs to be <Text style = {{fontWeight:'bold'}}>trimmed</Text> every {plantEntries[index].reminders.trimmed} days.</Text>\r\n                                <Text style = {[styles.contentText, {fontSize:12}]}>The plant needs to be <Text style = {{fontWeight:'bold'}}>replanted</Text> every {plantEntries[index].reminders.replanted} days.</Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                    {/* Additional Notes Container */}\r\n                    <View style = {styles.additionalNotesContainer}>\r\n                        <Text style = {{fontSize:16, color:Color.darkGreen, textDecorationLine:'underline'}}>Additional Notes:</Text>\r\n                        <TextInput \r\n                            placeholder = {plantEntries[index].notes}\r\n                            style = {{\r\n                                borderColor:'black',borderWidth:1,borderRadius:5, \r\n                                backgroundColor: \"white\", \r\n                                paddingLeft:10,paddingTop:5,marginTop:5, \r\n                                borderColor:Color.theme, textAlignVertical:'top',\r\n                                paddingVertical: Platform.OS === 'ios' ? 5 : 0\r\n                            }}\r\n                            placeholderTextColor = \"black\"\r\n                            numberOfLines = {10}\r\n                            multiline\r\n                            value = {plantEntries[index].notes}\r\n                        />\r\n\r\n                        {/* Buttons */}\r\n                        <View>\r\n                            <View style = {{flexDirection:'row', justifyContent:'space-between', marginTop:10}}>\r\n                                <TouchableOpacity \r\n                                    style = {{backgroundColor:Color.theme, flexDirection:'row', borderRadius:5, alignItems:'center', width:150, paddingVertical:5,zIndex:1}}\r\n                                    onPress={() => {\r\n                                        navigation.navigate('ModifyEntrySearch',{itemId:itemId})}}\r\n                                >\r\n                                    <Icon name = 'pencil' type = \"simple-line-icon\" color = \"white\" style = {{paddingLeft:5}}/>\r\n                                    <Text style = {{color:'white', paddingLeft:10, fontSize:16}}>Modify Entry</Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity \r\n                                    style = {{backgroundColor:Color.theme, flexDirection:'row', borderRadius:5, alignItems:'center', width:150}}\r\n                                    onPress = {() => {navigation.goBack() }}\r\n                                >\r\n                                    <Icon name ='md-arrow-back' type = 'ionicon' color = \"white\" style = {{paddingLeft:10}}/>\r\n                                    <Text style = {{paddingLeft:10, color:'white', fontSize:16}}>Go Back</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                    </View>\r\n                    {/* <Button title = \"TestButton\" onPress = {() => setUsername(\"Dusty\")} /> */}\r\n                    {/* <Button title = \"Output\" onPress = {() => console.log(plantEntries)} /> */}\r\n            </View>\r\n        </KeyboardAwareScrollView>\r\n\r\n    )\r\n\r\n    function deleteEntry()\r\n    {\r\n        let tempArray = [...plantEntries];\r\n\r\n        tempArray = tempArray.filter((name) => name.key != plantEntries[index].key);\r\n\r\n        setPlantEntries([...tempArray]);\r\n    }\r\n\r\n    function findEntryIndex(id)\r\n    {\r\n        for(let i = 0; i < plantEntries.length; i++)\r\n        {\r\n            if(plantEntries[i].key == id)\r\n                return i;\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function formatDate(date)\r\n    {\r\n        let originalDate = date;\r\n    \r\n        let day;\r\n        let month = -1;\r\n        let year;\r\n    \r\n        let dateArray = originalDate.split(\"-\");\r\n    \r\n        switch(dateArray[1].toLowerCase())\r\n        {\r\n            case \"1\":\r\n                month = 'January';\r\n                break;\r\n            case \"2\":\r\n                month = 'February';\r\n                break;\r\n            case \"3\":\r\n                month = \"March\";\r\n                break;\r\n            case \"4\":\r\n                month = \"April\";\r\n                break;\r\n            case \"5\":\r\n                month = \"May\";\r\n                break;\r\n            case \"6\":\r\n                month = \"June\";\r\n                break;\r\n            case \"7\":\r\n                month = \"July\";\r\n                break;\r\n            case \"8\":\r\n                month = \"August\";\r\n                break;\r\n            case \"9\":\r\n                month = \"September\";\r\n                break;\r\n            case \"10\":\r\n                month = \"October\";\r\n                break;\r\n            case \"11\":\r\n                month = \"November\";\r\n                break;\r\n            case \"12\":\r\n                month = \"December\";\r\n                break;\r\n        }\r\n    \r\n        day = dateArray[2];\r\n        year = dateArray[0];\r\n        console.log(dateArray[1]);\r\n        console.log(month);\r\n    \r\n        let completeDate = `${month} ${day}, ${year}`;\r\n    \r\n        return completeDate;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer:\r\n    {\r\n        flex:1, \r\n        // borderWidth:5, borderColor:'purple',\r\n        backgroundColor:Color.background,\r\n        alignItems:'center',\r\n        paddingBottom:50\r\n    },\r\n    secondaryContainerHeader:{\r\n        marginTop:Platform.OS === 'ios' ? 0 : 11,\r\n        // borderWidth:5, borderColor:'blue', \r\n        alignItems:'center', \r\n        width:'100%', height:307\r\n    },\r\n    headerContainer:{\r\n        position:'absolute', \r\n        // borderWidth:5, borderColor:'red',\r\n        alignItems:'center',\r\n        justifyContent:'center', \r\n        width:'100%',height:'100%'\r\n    },\r\n    contentContainer:{\r\n        // borderWidth:5, borderColor:'blue',\r\n        width:'80%'\r\n    },\r\n    HeaderText:\r\n    {\r\n        fontSize:25,\r\n        color: Color.header,\r\n        fontWeight:'bold'\r\n    },\r\n    roundButton:\r\n    {\r\n        backgroundColor:Color.theme,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        borderColor:'red', \r\n        height:25,\r\n        width:100     \r\n    },\r\n        weatherContainer:\r\n    {\r\n     \r\n    },\r\n    remindersContainer:\r\n    {\r\n        // borderWidth:5, borderColor:'blue'\r\n        marginTop:20\r\n    },\r\n    additionalNotesContainer:\r\n    {\r\n        // borderWidth:5, borderColor:'blue',\r\n        marginTop:20\r\n\r\n    },\r\n    contentText:{\r\n        fontSize:16\r\n    },\r\n    ContentTextHeader:{\r\n        color: '#358B59',\r\n        textDecorationLine:'underline'\r\n    }\r\n})\r\n\r\n\r\nexport {ViewEntrySearch}"]},"metadata":{},"sourceType":"module"}